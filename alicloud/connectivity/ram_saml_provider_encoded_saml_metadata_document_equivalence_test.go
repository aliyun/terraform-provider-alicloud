package connectivity

import "testing"

func TestEncodedSamlMetadataDocumentAreEquivalent(t *testing.T) {
	testCases := []struct {
		doc1     string
		doc2     string
		expected bool
	}{
		{"SGVsbG8gd29ybGQh", "SGVsbG8gd29ybGQh", true},
		{"SGVsbG8gd29ybGQh\n", "SGVsbG8gd29ybGQh", true},
		{"SGVsbG8gd29ybGQh", "SGVsbG8gd29ybGQh\n", true},
		{"SGVsbG8gd29ybGQh", "SGVsbG8gZGFuZ2xvcmF0aW9uIQ==", false},
		{"SGVsbG8gd29ybGQh\n", "SGVsbG8gZGFuZ2xvcmF0aW9uIQ==\n", false},
		{"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48bWQ6RW50aXR5RGVzY3JpcHRvciB4bWxuczptZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm1ldGFkYXRhIiBlbnRpdHlJRD0iaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vc2FtbDI/aWRwaWQ9QzAza3p3Z2oxIiB2YWxpZFVudGlsPSIyMDI2LTEyLTIzVDA5OjMwOjM4LjAwMFoiPgogIDxtZDpJRFBTU09EZXNjcmlwdG9yIFdhbnRBdXRoblJlcXVlc3RzU2lnbmVkPSJmYWxzZSIgcHJvdG9jb2xTdXBwb3J0RW51bWVyYXRpb249InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+CiAgICA8bWQ6S2V5RGVzY3JpcHRvciB1c2U9InNpZ25pbmciPgogICAgICA8ZHM6S2V5SW5mbyB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgPGRzOlg1MDlEYXRhPgogICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT5NSUlEZERDQ0FseWdBd0lCQWdJR0FYM3J4eXpoTUEwR0NTcUdTSWIzRFFFQkN3VUFNSHN4RkRBU0JnTlZCQW9UQzBkdmIyZHNaU0JKCmJtTXVNUll3RkFZRFZRUUhFdzFOYjNWdWRHRnBiaUJXYVdWM01ROHdEUVlEVlFRREV3WkhiMjluYkdVeEdEQVdCZ05WQkFzVEQwZHYKYjJkc1pTQkdiM0lnVjI5eWF6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZCQWdUQ2tOaGJHbG1iM0p1YVdFd0hoY05NakV4TWpJMApNRGt6TURNNFdoY05Nall4TWpJek1Ea3pNRE00V2pCN01SUXdFZ1lEVlFRS0V3dEhiMjluYkdVZ1NXNWpMakVXTUJRR0ExVUVCeE1OClRXOTFiblJoYVc0Z1ZtbGxkekVQTUEwR0ExVUVBeE1HUjI5dloyeGxNUmd3RmdZRFZRUUxFdzlIYjI5bmJHVWdSbTl5SUZkdmNtc3gKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSUV3cERZV3hwWm05eWJtbGhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QQpNSUlCQ2dLQ0FRRUF1T0RRUFhKL3BKczdQZWhyK3RZdWhVUHJGNHZvSStHSW1wT1M2bkEwWUM2SHBnUDFyeXo3WVBNaEF1dGQrT2NVCjRDUWF0ZDFrOERtV0dBS09DZEtNQ0JlaG8wY2lsREVZQTk0Mk1GNEhTVDNFNlBGcFhhb3htdjNTRkptMXFHNkhrdklRbzBzRTg1YkUKaGMwN3N2Y0FUQ0JQUTNRNjV1dndPeVhQRXlaaVVzL1BLeEx2NHYzMXBiYjNSdmJoRldMUkw1enVnUGh6M3JqTXpoY05GdUhnUTlKNgoySkw3dHY4azdDTDdLOXFZZWZKdXlYZy9wZXpYU2xXbFIvcFlCV3QxY1l0M2Y5azdHRDlydGkrb3pZN0RxVGZqeGU5QVpjaEM0cHVGClBlSkRSVzdIWDFrT2ROWW1BbWVhcitBQzJaOUhZdmNJTmVlelhCaEd2MXR6cHpqM09RSURBUUFCTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ1g4WlY0eGQ4TGFOQUZ3YS9QN2tOeFVadG1jWE5KWFphdW5xM2hxL3o2YWhXc0VlWDlEbk4rUnZJSkRXZUw3azg5KzluZAo2cUh5UWxYS1hmbVNVeGVJeDdwckpuMDg5dzN2UnMzdE1nNThOK0NQOFFEYjFNdWFkdHlYSDduYlBhSVVvU3lhTlphQjUwV2R2R0pzCnd3THJOWHQxZGg0Um1zVG8rZVJHUysvY08zZkE0M1d2WHlHNURsTnJNd3FDbUE4d3VKVkNFaWpsbldDQm5zYm4ybDZUMjgwSVdoMTAKWXROVVpSSXhVdWRTRy9QY0FFYjJMRnY1c1B5eGRPdEFHbytFakp0bEplaFdWbHpTMnNHaVpscEhER1kxellBeDJRcVhVM1RPRTU2TQpHYjJWNEc0YUs4bDEvT0NxTVJOd3VlNzhudFlwS29PZXI2RnZaTE9WaVN4MzwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAgICAgIDwvZHM6WDUwOURhdGE+CiAgICAgIDwvZHM6S2V5SW5mbz4KICAgIDwvbWQ6S2V5RGVzY3JpcHRvcj4KICAgIDxtZDpOYW1lSURGb3JtYXQ+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4xOm5hbWVpZC1mb3JtYXQ6ZW1haWxBZGRyZXNzPC9tZDpOYW1lSURGb3JtYXQ+CiAgICA8bWQ6U2luZ2xlU2lnbk9uU2VydmljZSBCaW5kaW5nPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YmluZGluZ3M6SFRUUC1SZWRpcmVjdCIgTG9jYXRpb249Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL3NhbWwyL2lkcD9pZHBpZD1DMDNrendnajEiLz4KICAgIDxtZDpTaW5nbGVTaWduT25TZXJ2aWNlIEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1QiIExvY2F0aW9uPSJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9zYW1sMi9pZHA/aWRwaWQ9QzAza3p3Z2oxIi8+CiAgPC9tZDpJRFBTU09EZXNjcmlwdG9yPgo8L21kOkVudGl0eURlc2NyaXB0b3I+",
			"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48bWQ6RW50aXR5RGVzY3JpcHRv\nciB4bWxuczptZD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOm1ldGFkYXRhIiBlbnRpdHlJ\nRD0iaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vc2FtbDI/aWRwaWQ9QzAza3p3Z2oxIiB2\nYWxpZFVudGlsPSIyMDI2LTEyLTIzVDA5OjMwOjM4LjAwMFoiPgogIDxtZDpJRFBTU09EZXNjcmlw\ndG9yIFdhbnRBdXRoblJlcXVlc3RzU2lnbmVkPSJmYWxzZSIgcHJvdG9jb2xTdXBwb3J0RW51bWVy\nYXRpb249InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+CiAgICA8bWQ6S2V5\nRGVzY3JpcHRvciB1c2U9InNpZ25pbmciPgogICAgICA8ZHM6S2V5SW5mbyB4bWxuczpkcz0iaHR0\ncDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+CiAgICAgICAgPGRzOlg1MDlEYXRhPgog\nICAgICAgICAgPGRzOlg1MDlDZXJ0aWZpY2F0ZT5NSUlEZERDQ0FseWdBd0lCQWdJR0FYM3J4eXpo\nTUEwR0NTcUdTSWIzRFFFQkN3VUFNSHN4RkRBU0JnTlZCQW9UQzBkdmIyZHNaU0JKCmJtTXVNUll3\nRkFZRFZRUUhFdzFOYjNWdWRHRnBiaUJXYVdWM01ROHdEUVlEVlFRREV3WkhiMjluYkdVeEdEQVdC\nZ05WQkFzVEQwZHYKYjJkc1pTQkdiM0lnVjI5eWF6RUxNQWtHQTFVRUJoTUNWVk14RXpBUkJnTlZC\nQWdUQ2tOaGJHbG1iM0p1YVdFd0hoY05NakV4TWpJMApNRGt6TURNNFdoY05Nall4TWpJek1Ea3pN\nRE00V2pCN01SUXdFZ1lEVlFRS0V3dEhiMjluYkdVZ1NXNWpMakVXTUJRR0ExVUVCeE1OClRXOTFi\nblJoYVc0Z1ZtbGxkekVQTUEwR0ExVUVBeE1HUjI5dloyeGxNUmd3RmdZRFZRUUxFdzlIYjI5bmJH\nVWdSbTl5SUZkdmNtc3gKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFRSUV3cERZV3hwWm05eWJt\nbGhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QQpNSUlCQ2dLQ0FRRUF1T0RRUFhKL3BK\nczdQZWhyK3RZdWhVUHJGNHZvSStHSW1wT1M2bkEwWUM2SHBnUDFyeXo3WVBNaEF1dGQrT2NVCjRD\nUWF0ZDFrOERtV0dBS09DZEtNQ0JlaG8wY2lsREVZQTk0Mk1GNEhTVDNFNlBGcFhhb3htdjNTRkpt\nMXFHNkhrdklRbzBzRTg1YkUKaGMwN3N2Y0FUQ0JQUTNRNjV1dndPeVhQRXlaaVVzL1BLeEx2NHYz\nMXBiYjNSdmJoRldMUkw1enVnUGh6M3JqTXpoY05GdUhnUTlKNgoySkw3dHY4azdDTDdLOXFZZWZK\ndXlYZy9wZXpYU2xXbFIvcFlCV3QxY1l0M2Y5azdHRDlydGkrb3pZN0RxVGZqeGU5QVpjaEM0cHVG\nClBlSkRSVzdIWDFrT2ROWW1BbWVhcitBQzJaOUhZdmNJTmVlelhCaEd2MXR6cHpqM09RSURBUUFC\nTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQ1g4WlY0eGQ4TGFOQUZ3YS9QN2tOeFVadG1jWE5K\nWFphdW5xM2hxL3o2YWhXc0VlWDlEbk4rUnZJSkRXZUw3azg5KzluZAo2cUh5UWxYS1hmbVNVeGVJ\neDdwckpuMDg5dzN2UnMzdE1nNThOK0NQOFFEYjFNdWFkdHlYSDduYlBhSVVvU3lhTlphQjUwV2R2\nR0pzCnd3THJOWHQxZGg0Um1zVG8rZVJHUysvY08zZkE0M1d2WHlHNURsTnJNd3FDbUE4d3VKVkNF\naWpsbldDQm5zYm4ybDZUMjgwSVdoMTAKWXROVVpSSXhVdWRTRy9QY0FFYjJMRnY1c1B5eGRPdEFH\nbytFakp0bEplaFdWbHpTMnNHaVpscEhER1kxellBeDJRcVhVM1RPRTU2TQpHYjJWNEc0YUs4bDEv\nT0NxTVJOd3VlNzhudFlwS29PZXI2RnZaTE9WaVN4MzwvZHM6WDUwOUNlcnRpZmljYXRlPgogICAg\nICAgIDwvZHM6WDUwOURhdGE+CiAgICAgIDwvZHM6S2V5SW5mbz4KICAgIDwvbWQ6S2V5RGVzY3Jp\ncHRvcj4KICAgIDxtZDpOYW1lSURGb3JtYXQ+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4xOm5h\nbWVpZC1mb3JtYXQ6ZW1haWxBZGRyZXNzPC9tZDpOYW1lSURGb3JtYXQ+CiAgICA8bWQ6U2luZ2xl\nU2lnbk9uU2VydmljZSBCaW5kaW5nPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YmluZGlu\nZ3M6SFRUUC1SZWRpcmVjdCIgTG9jYXRpb249Imh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9v\nL3NhbWwyL2lkcD9pZHBpZD1DMDNrendnajEiLz4KICAgIDxtZDpTaW5nbGVTaWduT25TZXJ2aWNl\nIEJpbmRpbmc9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpiaW5kaW5nczpIVFRQLVBPU1Qi\nIExvY2F0aW9uPSJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9zYW1sMi9pZHA/aWRwaWQ9\nQzAza3p3Z2oxIi8+CiAgPC9tZDpJRFBTU09EZXNjcmlwdG9yPgo8L21kOkVudGl0eURlc2NyaXB0\nb3I+",
			true},
	}

	for _, tc := range testCases {
		result, err := ramSamlProviderEncodedSamlMetadataDocumentEquivalence(tc.doc1, tc.doc2)
		if err != nil {
			t.Fatalf("Unexpected error: %v", err)
		}
		if result != tc.expected {
			t.Fatalf("Expected %t for documents '%s' and '%s', got %t", tc.expected, tc.doc1, tc.doc2, result)
		}
	}
}
