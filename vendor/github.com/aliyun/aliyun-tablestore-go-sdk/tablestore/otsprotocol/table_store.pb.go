// Code generated by protoc-gen-go. DO NOT EDIT.
// source: table_store.proto

package otsprotocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PrimaryKeyType int32

const (
	PrimaryKeyType_INTEGER PrimaryKeyType = 1
	PrimaryKeyType_STRING  PrimaryKeyType = 2
	PrimaryKeyType_BINARY  PrimaryKeyType = 3
)

var PrimaryKeyType_name = map[int32]string{
	1: "INTEGER",
	2: "STRING",
	3: "BINARY",
}
var PrimaryKeyType_value = map[string]int32{
	"INTEGER": 1,
	"STRING":  2,
	"BINARY":  3,
}

func (x PrimaryKeyType) Enum() *PrimaryKeyType {
	p := new(PrimaryKeyType)
	*p = x
	return p
}
func (x PrimaryKeyType) String() string {
	return proto.EnumName(PrimaryKeyType_name, int32(x))
}
func (x *PrimaryKeyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PrimaryKeyType_value, data, "PrimaryKeyType")
	if err != nil {
		return err
	}
	*x = PrimaryKeyType(value)
	return nil
}
func (PrimaryKeyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type PrimaryKeyOption int32

const (
	PrimaryKeyOption_AUTO_INCREMENT PrimaryKeyOption = 1
)

var PrimaryKeyOption_name = map[int32]string{
	1: "AUTO_INCREMENT",
}
var PrimaryKeyOption_value = map[string]int32{
	"AUTO_INCREMENT": 1,
}

func (x PrimaryKeyOption) Enum() *PrimaryKeyOption {
	p := new(PrimaryKeyOption)
	*p = x
	return p
}
func (x PrimaryKeyOption) String() string {
	return proto.EnumName(PrimaryKeyOption_name, int32(x))
}
func (x *PrimaryKeyOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PrimaryKeyOption_value, data, "PrimaryKeyOption")
	if err != nil {
		return err
	}
	*x = PrimaryKeyOption(value)
	return nil
}
func (PrimaryKeyOption) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type BloomFilterType int32

const (
	BloomFilterType_NONE BloomFilterType = 1
	BloomFilterType_CELL BloomFilterType = 2
	BloomFilterType_ROW  BloomFilterType = 3
)

var BloomFilterType_name = map[int32]string{
	1: "NONE",
	2: "CELL",
	3: "ROW",
}
var BloomFilterType_value = map[string]int32{
	"NONE": 1,
	"CELL": 2,
	"ROW":  3,
}

func (x BloomFilterType) Enum() *BloomFilterType {
	p := new(BloomFilterType)
	*p = x
	return p
}
func (x BloomFilterType) String() string {
	return proto.EnumName(BloomFilterType_name, int32(x))
}
func (x *BloomFilterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BloomFilterType_value, data, "BloomFilterType")
	if err != nil {
		return err
	}
	*x = BloomFilterType(value)
	return nil
}
func (BloomFilterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// *
// 表的状态变更只与用户的操作对应，内部的机器failover等状况不对应表的状态变更。
// 有三个考虑：
//     一是一般场景下用户只会在做了对表的修改操作后才会去检查表的状态；
//     二是内部机器failover导致访问异常到用户能够查看到表的状态变更这两个时刻之间会有一段延迟，无法将表的不可服务状态与用户查看到的表的状态完全匹配上。
//     三是内部机器failover后不能说是表的整个状态变更，而应该是partition的状态变更，对应表的状态就是PARTIAL_FAILOVER，这个partial的粒度无法体现，会让用户更加困惑。
type TableStatus int32

const (
	TableStatus_ACTIVE    TableStatus = 1
	TableStatus_INACTIVE  TableStatus = 2
	TableStatus_LOADING   TableStatus = 3
	TableStatus_UNLOADING TableStatus = 4
	TableStatus_UPDATING  TableStatus = 5
)

var TableStatus_name = map[int32]string{
	1: "ACTIVE",
	2: "INACTIVE",
	3: "LOADING",
	4: "UNLOADING",
	5: "UPDATING",
}
var TableStatus_value = map[string]int32{
	"ACTIVE":    1,
	"INACTIVE":  2,
	"LOADING":   3,
	"UNLOADING": 4,
	"UPDATING":  5,
}

func (x TableStatus) Enum() *TableStatus {
	p := new(TableStatus)
	*p = x
	return p
}
func (x TableStatus) String() string {
	return proto.EnumName(TableStatus_name, int32(x))
}
func (x *TableStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableStatus_value, data, "TableStatus")
	if err != nil {
		return err
	}
	*x = TableStatus(value)
	return nil
}
func (TableStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type RowExistenceExpectation int32

const (
	RowExistenceExpectation_IGNORE           RowExistenceExpectation = 0
	RowExistenceExpectation_EXPECT_EXIST     RowExistenceExpectation = 1
	RowExistenceExpectation_EXPECT_NOT_EXIST RowExistenceExpectation = 2
)

var RowExistenceExpectation_name = map[int32]string{
	0: "IGNORE",
	1: "EXPECT_EXIST",
	2: "EXPECT_NOT_EXIST",
}
var RowExistenceExpectation_value = map[string]int32{
	"IGNORE":           0,
	"EXPECT_EXIST":     1,
	"EXPECT_NOT_EXIST": 2,
}

func (x RowExistenceExpectation) Enum() *RowExistenceExpectation {
	p := new(RowExistenceExpectation)
	*p = x
	return p
}
func (x RowExistenceExpectation) String() string {
	return proto.EnumName(RowExistenceExpectation_name, int32(x))
}
func (x *RowExistenceExpectation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RowExistenceExpectation_value, data, "RowExistenceExpectation")
	if err != nil {
		return err
	}
	*x = RowExistenceExpectation(value)
	return nil
}
func (RowExistenceExpectation) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

type ReturnType int32

const (
	ReturnType_RT_NONE ReturnType = 0
	ReturnType_RT_PK   ReturnType = 1
)

var ReturnType_name = map[int32]string{
	0: "RT_NONE",
	1: "RT_PK",
}
var ReturnType_value = map[string]int32{
	"RT_NONE": 0,
	"RT_PK":   1,
}

func (x ReturnType) Enum() *ReturnType {
	p := new(ReturnType)
	*p = x
	return p
}
func (x ReturnType) String() string {
	return proto.EnumName(ReturnType_name, int32(x))
}
func (x *ReturnType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReturnType_value, data, "ReturnType")
	if err != nil {
		return err
	}
	*x = ReturnType(value)
	return nil
}
func (ReturnType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type OperationType int32

const (
	OperationType_PUT    OperationType = 1
	OperationType_UPDATE OperationType = 2
	OperationType_DELETE OperationType = 3
)

var OperationType_name = map[int32]string{
	1: "PUT",
	2: "UPDATE",
	3: "DELETE",
}
var OperationType_value = map[string]int32{
	"PUT":    1,
	"UPDATE": 2,
	"DELETE": 3,
}

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}
func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}
func (x *OperationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OperationType_value, data, "OperationType")
	if err != nil {
		return err
	}
	*x = OperationType(value)
	return nil
}
func (OperationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

// #############################################  GetRange  #############################################
type Direction int32

const (
	Direction_FORWARD  Direction = 0
	Direction_BACKWARD Direction = 1
)

var Direction_name = map[int32]string{
	0: "FORWARD",
	1: "BACKWARD",
}
var Direction_value = map[string]int32{
	"FORWARD":  0,
	"BACKWARD": 1,
}

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}
func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (x *Direction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Direction_value, data, "Direction")
	if err != nil {
		return err
	}
	*x = Direction(value)
	return nil
}
func (Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

type StreamStatus int32

const (
	StreamStatus_STREAM_ENABLING StreamStatus = 1
	StreamStatus_STREAM_ACTIVE   StreamStatus = 2
)

var StreamStatus_name = map[int32]string{
	1: "STREAM_ENABLING",
	2: "STREAM_ACTIVE",
}
var StreamStatus_value = map[string]int32{
	"STREAM_ENABLING": 1,
	"STREAM_ACTIVE":   2,
}

func (x StreamStatus) Enum() *StreamStatus {
	p := new(StreamStatus)
	*p = x
	return p
}
func (x StreamStatus) String() string {
	return proto.EnumName(StreamStatus_name, int32(x))
}
func (x *StreamStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StreamStatus_value, data, "StreamStatus")
	if err != nil {
		return err
	}
	*x = StreamStatus(value)
	return nil
}
func (StreamStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type ActionType int32

const (
	ActionType_PUT_ROW    ActionType = 1
	ActionType_UPDATE_ROW ActionType = 2
	ActionType_DELETE_ROW ActionType = 3
)

var ActionType_name = map[int32]string{
	1: "PUT_ROW",
	2: "UPDATE_ROW",
	3: "DELETE_ROW",
}
var ActionType_value = map[string]int32{
	"PUT_ROW":    1,
	"UPDATE_ROW": 2,
	"DELETE_ROW": 3,
}

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}
func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (x *ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionType_value, data, "ActionType")
	if err != nil {
		return err
	}
	*x = ActionType(value)
	return nil
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

type Error struct {
	Code             *string `protobuf:"bytes,1,req,name=code" json:"code,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Error) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type PrimaryKeySchema struct {
	Name             *string           `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type             *PrimaryKeyType   `protobuf:"varint,2,req,name=type,enum=otsprotocol.PrimaryKeyType" json:"type,omitempty"`
	Option           *PrimaryKeyOption `protobuf:"varint,3,opt,name=option,enum=otsprotocol.PrimaryKeyOption" json:"option,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PrimaryKeySchema) Reset()                    { *m = PrimaryKeySchema{} }
func (m *PrimaryKeySchema) String() string            { return proto.CompactTextString(m) }
func (*PrimaryKeySchema) ProtoMessage()               {}
func (*PrimaryKeySchema) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PrimaryKeySchema) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PrimaryKeySchema) GetType() PrimaryKeyType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PrimaryKeyType_INTEGER
}

func (m *PrimaryKeySchema) GetOption() PrimaryKeyOption {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return PrimaryKeyOption_AUTO_INCREMENT
}

type PartitionRange struct {
	Begin            []byte `protobuf:"bytes,1,req,name=begin" json:"begin,omitempty"`
	End              []byte `protobuf:"bytes,2,req,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PartitionRange) Reset()                    { *m = PartitionRange{} }
func (m *PartitionRange) String() string            { return proto.CompactTextString(m) }
func (*PartitionRange) ProtoMessage()               {}
func (*PartitionRange) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PartitionRange) GetBegin() []byte {
	if m != nil {
		return m.Begin
	}
	return nil
}

func (m *PartitionRange) GetEnd() []byte {
	if m != nil {
		return m.End
	}
	return nil
}

type TableOptions struct {
	TimeToLive                *int32           `protobuf:"varint,1,opt,name=time_to_live,json=timeToLive" json:"time_to_live,omitempty"`
	MaxVersions               *int32           `protobuf:"varint,2,opt,name=max_versions,json=maxVersions" json:"max_versions,omitempty"`
	BloomFilterType           *BloomFilterType `protobuf:"varint,3,opt,name=bloom_filter_type,json=bloomFilterType,enum=otsprotocol.BloomFilterType" json:"bloom_filter_type,omitempty"`
	BlockSize                 *int32           `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	DeviationCellVersionInSec *int64           `protobuf:"varint,5,opt,name=deviation_cell_version_in_sec,json=deviationCellVersionInSec" json:"deviation_cell_version_in_sec,omitempty"`
	XXX_unrecognized          []byte           `json:"-"`
}

func (m *TableOptions) Reset()                    { *m = TableOptions{} }
func (m *TableOptions) String() string            { return proto.CompactTextString(m) }
func (*TableOptions) ProtoMessage()               {}
func (*TableOptions) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *TableOptions) GetTimeToLive() int32 {
	if m != nil && m.TimeToLive != nil {
		return *m.TimeToLive
	}
	return 0
}

func (m *TableOptions) GetMaxVersions() int32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return 0
}

func (m *TableOptions) GetBloomFilterType() BloomFilterType {
	if m != nil && m.BloomFilterType != nil {
		return *m.BloomFilterType
	}
	return BloomFilterType_NONE
}

func (m *TableOptions) GetBlockSize() int32 {
	if m != nil && m.BlockSize != nil {
		return *m.BlockSize
	}
	return 0
}

func (m *TableOptions) GetDeviationCellVersionInSec() int64 {
	if m != nil && m.DeviationCellVersionInSec != nil {
		return *m.DeviationCellVersionInSec
	}
	return 0
}

type TableMeta struct {
	TableName        *string             `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	PrimaryKey       []*PrimaryKeySchema `protobuf:"bytes,2,rep,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *TableMeta) Reset()                    { *m = TableMeta{} }
func (m *TableMeta) String() string            { return proto.CompactTextString(m) }
func (*TableMeta) ProtoMessage()               {}
func (*TableMeta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *TableMeta) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableMeta) GetPrimaryKey() []*PrimaryKeySchema {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

type Condition struct {
	RowExistence     *RowExistenceExpectation `protobuf:"varint,1,req,name=row_existence,json=rowExistence,enum=otsprotocol.RowExistenceExpectation" json:"row_existence,omitempty"`
	ColumnCondition  []byte                   `protobuf:"bytes,2,opt,name=column_condition,json=columnCondition" json:"column_condition,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Condition) GetRowExistence() RowExistenceExpectation {
	if m != nil && m.RowExistence != nil {
		return *m.RowExistence
	}
	return RowExistenceExpectation_IGNORE
}

func (m *Condition) GetColumnCondition() []byte {
	if m != nil {
		return m.ColumnCondition
	}
	return nil
}

type CapacityUnit struct {
	Read             *int32 `protobuf:"varint,1,opt,name=read" json:"read,omitempty"`
	Write            *int32 `protobuf:"varint,2,opt,name=write" json:"write,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CapacityUnit) Reset()                    { *m = CapacityUnit{} }
func (m *CapacityUnit) String() string            { return proto.CompactTextString(m) }
func (*CapacityUnit) ProtoMessage()               {}
func (*CapacityUnit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *CapacityUnit) GetRead() int32 {
	if m != nil && m.Read != nil {
		return *m.Read
	}
	return 0
}

func (m *CapacityUnit) GetWrite() int32 {
	if m != nil && m.Write != nil {
		return *m.Write
	}
	return 0
}

type ReservedThroughputDetails struct {
	CapacityUnit     *CapacityUnit `protobuf:"bytes,1,req,name=capacity_unit,json=capacityUnit" json:"capacity_unit,omitempty"`
	LastIncreaseTime *int64        `protobuf:"varint,2,req,name=last_increase_time,json=lastIncreaseTime" json:"last_increase_time,omitempty"`
	LastDecreaseTime *int64        `protobuf:"varint,3,opt,name=last_decrease_time,json=lastDecreaseTime" json:"last_decrease_time,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ReservedThroughputDetails) Reset()                    { *m = ReservedThroughputDetails{} }
func (m *ReservedThroughputDetails) String() string            { return proto.CompactTextString(m) }
func (*ReservedThroughputDetails) ProtoMessage()               {}
func (*ReservedThroughputDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ReservedThroughputDetails) GetCapacityUnit() *CapacityUnit {
	if m != nil {
		return m.CapacityUnit
	}
	return nil
}

func (m *ReservedThroughputDetails) GetLastIncreaseTime() int64 {
	if m != nil && m.LastIncreaseTime != nil {
		return *m.LastIncreaseTime
	}
	return 0
}

func (m *ReservedThroughputDetails) GetLastDecreaseTime() int64 {
	if m != nil && m.LastDecreaseTime != nil {
		return *m.LastDecreaseTime
	}
	return 0
}

type ReservedThroughput struct {
	CapacityUnit     *CapacityUnit `protobuf:"bytes,1,req,name=capacity_unit,json=capacityUnit" json:"capacity_unit,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ReservedThroughput) Reset()                    { *m = ReservedThroughput{} }
func (m *ReservedThroughput) String() string            { return proto.CompactTextString(m) }
func (*ReservedThroughput) ProtoMessage()               {}
func (*ReservedThroughput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ReservedThroughput) GetCapacityUnit() *CapacityUnit {
	if m != nil {
		return m.CapacityUnit
	}
	return nil
}

type ConsumedCapacity struct {
	CapacityUnit     *CapacityUnit `protobuf:"bytes,1,req,name=capacity_unit,json=capacityUnit" json:"capacity_unit,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ConsumedCapacity) Reset()                    { *m = ConsumedCapacity{} }
func (m *ConsumedCapacity) String() string            { return proto.CompactTextString(m) }
func (*ConsumedCapacity) ProtoMessage()               {}
func (*ConsumedCapacity) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ConsumedCapacity) GetCapacityUnit() *CapacityUnit {
	if m != nil {
		return m.CapacityUnit
	}
	return nil
}

type StreamSpecification struct {
	EnableStream     *bool  `protobuf:"varint,1,req,name=enable_stream,json=enableStream" json:"enable_stream,omitempty"`
	ExpirationTime   *int32 `protobuf:"varint,2,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *StreamSpecification) Reset()                    { *m = StreamSpecification{} }
func (m *StreamSpecification) String() string            { return proto.CompactTextString(m) }
func (*StreamSpecification) ProtoMessage()               {}
func (*StreamSpecification) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *StreamSpecification) GetEnableStream() bool {
	if m != nil && m.EnableStream != nil {
		return *m.EnableStream
	}
	return false
}

func (m *StreamSpecification) GetExpirationTime() int32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

type StreamDetails struct {
	EnableStream     *bool   `protobuf:"varint,1,req,name=enable_stream,json=enableStream" json:"enable_stream,omitempty"`
	StreamId         *string `protobuf:"bytes,2,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	ExpirationTime   *int32  `protobuf:"varint,3,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	LastEnableTime   *int64  `protobuf:"varint,4,opt,name=last_enable_time,json=lastEnableTime" json:"last_enable_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StreamDetails) Reset()                    { *m = StreamDetails{} }
func (m *StreamDetails) String() string            { return proto.CompactTextString(m) }
func (*StreamDetails) ProtoMessage()               {}
func (*StreamDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *StreamDetails) GetEnableStream() bool {
	if m != nil && m.EnableStream != nil {
		return *m.EnableStream
	}
	return false
}

func (m *StreamDetails) GetStreamId() string {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return ""
}

func (m *StreamDetails) GetExpirationTime() int32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

func (m *StreamDetails) GetLastEnableTime() int64 {
	if m != nil && m.LastEnableTime != nil {
		return *m.LastEnableTime
	}
	return 0
}

// *
// table_meta用于存储表中不可更改的schema属性，可以更改的ReservedThroughput和TableOptions独立出来，作为UpdateTable的参数。
// 加入GlobalIndex和LocalIndex之后，结构会变为：
// message CreateTableRequest {
//         required TableMeta table_meta = 1;
//         required ReservedThroughput reserved_throughput = 2;
//         required TableOptions table_options = 3;
//         repeated LocalIndex local_indexes = 4; // LocalIndex不再单独包含ReservedThroughput和TableOptions，其与主表共享配置。
//         repeated GlobalIndex global_indexes = 5; // GlobalIndex内单独包含ReservedThroughput和TableOptions
// }
type CreateTableRequest struct {
	TableMeta          *TableMeta           `protobuf:"bytes,1,req,name=table_meta,json=tableMeta" json:"table_meta,omitempty"`
	ReservedThroughput *ReservedThroughput  `protobuf:"bytes,2,req,name=reserved_throughput,json=reservedThroughput" json:"reserved_throughput,omitempty"`
	TableOptions       *TableOptions        `protobuf:"bytes,3,opt,name=table_options,json=tableOptions" json:"table_options,omitempty"`
	Partitions         []*PartitionRange    `protobuf:"bytes,4,rep,name=partitions" json:"partitions,omitempty"`
	StreamSpec         *StreamSpecification `protobuf:"bytes,5,opt,name=stream_spec,json=streamSpec" json:"stream_spec,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *CreateTableRequest) Reset()                    { *m = CreateTableRequest{} }
func (m *CreateTableRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTableRequest) ProtoMessage()               {}
func (*CreateTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *CreateTableRequest) GetTableMeta() *TableMeta {
	if m != nil {
		return m.TableMeta
	}
	return nil
}

func (m *CreateTableRequest) GetReservedThroughput() *ReservedThroughput {
	if m != nil {
		return m.ReservedThroughput
	}
	return nil
}

func (m *CreateTableRequest) GetTableOptions() *TableOptions {
	if m != nil {
		return m.TableOptions
	}
	return nil
}

func (m *CreateTableRequest) GetPartitions() []*PartitionRange {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *CreateTableRequest) GetStreamSpec() *StreamSpecification {
	if m != nil {
		return m.StreamSpec
	}
	return nil
}

type CreateTableResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CreateTableResponse) Reset()                    { *m = CreateTableResponse{} }
func (m *CreateTableResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTableResponse) ProtoMessage()               {}
func (*CreateTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

// #############################################  UpdateTable  #############################################
type UpdateTableRequest struct {
	TableName          *string              `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	ReservedThroughput *ReservedThroughput  `protobuf:"bytes,2,opt,name=reserved_throughput,json=reservedThroughput" json:"reserved_throughput,omitempty"`
	TableOptions       *TableOptions        `protobuf:"bytes,3,opt,name=table_options,json=tableOptions" json:"table_options,omitempty"`
	StreamSpec         *StreamSpecification `protobuf:"bytes,4,opt,name=stream_spec,json=streamSpec" json:"stream_spec,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *UpdateTableRequest) Reset()                    { *m = UpdateTableRequest{} }
func (m *UpdateTableRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTableRequest) ProtoMessage()               {}
func (*UpdateTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *UpdateTableRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *UpdateTableRequest) GetReservedThroughput() *ReservedThroughput {
	if m != nil {
		return m.ReservedThroughput
	}
	return nil
}

func (m *UpdateTableRequest) GetTableOptions() *TableOptions {
	if m != nil {
		return m.TableOptions
	}
	return nil
}

func (m *UpdateTableRequest) GetStreamSpec() *StreamSpecification {
	if m != nil {
		return m.StreamSpec
	}
	return nil
}

type UpdateTableResponse struct {
	ReservedThroughputDetails *ReservedThroughputDetails `protobuf:"bytes,1,req,name=reserved_throughput_details,json=reservedThroughputDetails" json:"reserved_throughput_details,omitempty"`
	TableOptions              *TableOptions              `protobuf:"bytes,2,req,name=table_options,json=tableOptions" json:"table_options,omitempty"`
	StreamDetails             *StreamDetails             `protobuf:"bytes,3,opt,name=stream_details,json=streamDetails" json:"stream_details,omitempty"`
	XXX_unrecognized          []byte                     `json:"-"`
}

func (m *UpdateTableResponse) Reset()                    { *m = UpdateTableResponse{} }
func (m *UpdateTableResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTableResponse) ProtoMessage()               {}
func (*UpdateTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *UpdateTableResponse) GetReservedThroughputDetails() *ReservedThroughputDetails {
	if m != nil {
		return m.ReservedThroughputDetails
	}
	return nil
}

func (m *UpdateTableResponse) GetTableOptions() *TableOptions {
	if m != nil {
		return m.TableOptions
	}
	return nil
}

func (m *UpdateTableResponse) GetStreamDetails() *StreamDetails {
	if m != nil {
		return m.StreamDetails
	}
	return nil
}

// #############################################  DescribeTable  #############################################
type DescribeTableRequest struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DescribeTableRequest) Reset()                    { *m = DescribeTableRequest{} }
func (m *DescribeTableRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeTableRequest) ProtoMessage()               {}
func (*DescribeTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *DescribeTableRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type DescribeTableResponse struct {
	TableMeta                 *TableMeta                 `protobuf:"bytes,1,req,name=table_meta,json=tableMeta" json:"table_meta,omitempty"`
	ReservedThroughputDetails *ReservedThroughputDetails `protobuf:"bytes,2,req,name=reserved_throughput_details,json=reservedThroughputDetails" json:"reserved_throughput_details,omitempty"`
	TableOptions              *TableOptions              `protobuf:"bytes,3,req,name=table_options,json=tableOptions" json:"table_options,omitempty"`
	TableStatus               *TableStatus               `protobuf:"varint,4,req,name=table_status,json=tableStatus,enum=otsprotocol.TableStatus" json:"table_status,omitempty"`
	StreamDetails             *StreamDetails             `protobuf:"bytes,5,opt,name=stream_details,json=streamDetails" json:"stream_details,omitempty"`
	ShardSplits               [][]byte                   `protobuf:"bytes,6,rep,name=shard_splits,json=shardSplits" json:"shard_splits,omitempty"`
	XXX_unrecognized          []byte                     `json:"-"`
}

func (m *DescribeTableResponse) Reset()                    { *m = DescribeTableResponse{} }
func (m *DescribeTableResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeTableResponse) ProtoMessage()               {}
func (*DescribeTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *DescribeTableResponse) GetTableMeta() *TableMeta {
	if m != nil {
		return m.TableMeta
	}
	return nil
}

func (m *DescribeTableResponse) GetReservedThroughputDetails() *ReservedThroughputDetails {
	if m != nil {
		return m.ReservedThroughputDetails
	}
	return nil
}

func (m *DescribeTableResponse) GetTableOptions() *TableOptions {
	if m != nil {
		return m.TableOptions
	}
	return nil
}

func (m *DescribeTableResponse) GetTableStatus() TableStatus {
	if m != nil && m.TableStatus != nil {
		return *m.TableStatus
	}
	return TableStatus_ACTIVE
}

func (m *DescribeTableResponse) GetStreamDetails() *StreamDetails {
	if m != nil {
		return m.StreamDetails
	}
	return nil
}

func (m *DescribeTableResponse) GetShardSplits() [][]byte {
	if m != nil {
		return m.ShardSplits
	}
	return nil
}

// #############################################  ListTable  #############################################
type ListTableRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListTableRequest) Reset()                    { *m = ListTableRequest{} }
func (m *ListTableRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTableRequest) ProtoMessage()               {}
func (*ListTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

// *
// 当前只返回一个简单的名称列表，需要讨论是否有业务场景需要获取除了表名之外的其他信息。
// 其他信息可以包含预留吞吐量以及表的状态，这个信息只能是一个粗略的信息，表的详细信息还是需要通过DescribeTable来获取。
type ListTableResponse struct {
	TableNames       []string `protobuf:"bytes,1,rep,name=table_names,json=tableNames" json:"table_names,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ListTableResponse) Reset()                    { *m = ListTableResponse{} }
func (m *ListTableResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTableResponse) ProtoMessage()               {}
func (*ListTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *ListTableResponse) GetTableNames() []string {
	if m != nil {
		return m.TableNames
	}
	return nil
}

// #############################################  DeleteTable  #############################################
type DeleteTableRequest struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteTableRequest) Reset()                    { *m = DeleteTableRequest{} }
func (m *DeleteTableRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTableRequest) ProtoMessage()               {}
func (*DeleteTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *DeleteTableRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type DeleteTableResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteTableResponse) Reset()                    { *m = DeleteTableResponse{} }
func (m *DeleteTableResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTableResponse) ProtoMessage()               {}
func (*DeleteTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

// #############################################  LoadTable  #############################################
type LoadTableRequest struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoadTableRequest) Reset()                    { *m = LoadTableRequest{} }
func (m *LoadTableRequest) String() string            { return proto.CompactTextString(m) }
func (*LoadTableRequest) ProtoMessage()               {}
func (*LoadTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *LoadTableRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type LoadTableResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoadTableResponse) Reset()                    { *m = LoadTableResponse{} }
func (m *LoadTableResponse) String() string            { return proto.CompactTextString(m) }
func (*LoadTableResponse) ProtoMessage()               {}
func (*LoadTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

// #############################################  UnloadTable  #############################################
type UnloadTableRequest struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnloadTableRequest) Reset()                    { *m = UnloadTableRequest{} }
func (m *UnloadTableRequest) String() string            { return proto.CompactTextString(m) }
func (*UnloadTableRequest) ProtoMessage()               {}
func (*UnloadTableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *UnloadTableRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type UnloadTableResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UnloadTableResponse) Reset()                    { *m = UnloadTableResponse{} }
func (m *UnloadTableResponse) String() string            { return proto.CompactTextString(m) }
func (*UnloadTableResponse) ProtoMessage()               {}
func (*UnloadTableResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

// *
// 时间戳的取值最小值为0，最大值为INT64.MAX
// 1. 若要查询一个范围，则指定start_time和end_time
// 2. 若要查询一个特定时间戳，则指定specific_time
type TimeRange struct {
	StartTime        *int64 `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          *int64 `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	SpecificTime     *int64 `protobuf:"varint,3,opt,name=specific_time,json=specificTime" json:"specific_time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TimeRange) Reset()                    { *m = TimeRange{} }
func (m *TimeRange) String() string            { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()               {}
func (*TimeRange) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *TimeRange) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *TimeRange) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *TimeRange) GetSpecificTime() int64 {
	if m != nil && m.SpecificTime != nil {
		return *m.SpecificTime
	}
	return 0
}

type ReturnContent struct {
	ReturnType       *ReturnType `protobuf:"varint,1,opt,name=return_type,json=returnType,enum=otsprotocol.ReturnType" json:"return_type,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ReturnContent) Reset()                    { *m = ReturnContent{} }
func (m *ReturnContent) String() string            { return proto.CompactTextString(m) }
func (*ReturnContent) ProtoMessage()               {}
func (*ReturnContent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *ReturnContent) GetReturnType() ReturnType {
	if m != nil && m.ReturnType != nil {
		return *m.ReturnType
	}
	return ReturnType_RT_NONE
}

// *
// 1. 支持用户指定版本时间戳范围或者特定的版本时间来读取指定版本的列
// 2. 目前暂不支持行内的断点
type GetRowRequest struct {
	TableName        *string    `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	PrimaryKey       []byte     `protobuf:"bytes,2,req,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	ColumnsToGet     []string   `protobuf:"bytes,3,rep,name=columns_to_get,json=columnsToGet" json:"columns_to_get,omitempty"`
	TimeRange        *TimeRange `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	MaxVersions      *int32     `protobuf:"varint,5,opt,name=max_versions,json=maxVersions" json:"max_versions,omitempty"`
	CacheBlocks      *bool      `protobuf:"varint,6,opt,name=cache_blocks,json=cacheBlocks,def=1" json:"cache_blocks,omitempty"`
	Filter           []byte     `protobuf:"bytes,7,opt,name=filter" json:"filter,omitempty"`
	StartColumn      *string    `protobuf:"bytes,8,opt,name=start_column,json=startColumn" json:"start_column,omitempty"`
	EndColumn        *string    `protobuf:"bytes,9,opt,name=end_column,json=endColumn" json:"end_column,omitempty"`
	Token            []byte     `protobuf:"bytes,10,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *GetRowRequest) Reset()                    { *m = GetRowRequest{} }
func (m *GetRowRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRowRequest) ProtoMessage()               {}
func (*GetRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

const Default_GetRowRequest_CacheBlocks bool = true

func (m *GetRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *GetRowRequest) GetPrimaryKey() []byte {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func (m *GetRowRequest) GetColumnsToGet() []string {
	if m != nil {
		return m.ColumnsToGet
	}
	return nil
}

func (m *GetRowRequest) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *GetRowRequest) GetMaxVersions() int32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return 0
}

func (m *GetRowRequest) GetCacheBlocks() bool {
	if m != nil && m.CacheBlocks != nil {
		return *m.CacheBlocks
	}
	return Default_GetRowRequest_CacheBlocks
}

func (m *GetRowRequest) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GetRowRequest) GetStartColumn() string {
	if m != nil && m.StartColumn != nil {
		return *m.StartColumn
	}
	return ""
}

func (m *GetRowRequest) GetEndColumn() string {
	if m != nil && m.EndColumn != nil {
		return *m.EndColumn
	}
	return ""
}

func (m *GetRowRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetRowResponse struct {
	Consumed         *ConsumedCapacity `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,2,req,name=row" json:"row,omitempty"`
	NextToken        []byte            `protobuf:"bytes,3,opt,name=next_token,json=nextToken" json:"next_token,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GetRowResponse) Reset()                    { *m = GetRowResponse{} }
func (m *GetRowResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRowResponse) ProtoMessage()               {}
func (*GetRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *GetRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *GetRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *GetRowResponse) GetNextToken() []byte {
	if m != nil {
		return m.NextToken
	}
	return nil
}

// #############################################  UpdateRow  #############################################
type UpdateRowRequest struct {
	TableName        *string        `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	RowChange        []byte         `protobuf:"bytes,2,req,name=row_change,json=rowChange" json:"row_change,omitempty"`
	Condition        *Condition     `protobuf:"bytes,3,req,name=condition" json:"condition,omitempty"`
	ReturnContent    *ReturnContent `protobuf:"bytes,4,opt,name=return_content,json=returnContent" json:"return_content,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UpdateRowRequest) Reset()                    { *m = UpdateRowRequest{} }
func (m *UpdateRowRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRowRequest) ProtoMessage()               {}
func (*UpdateRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *UpdateRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *UpdateRowRequest) GetRowChange() []byte {
	if m != nil {
		return m.RowChange
	}
	return nil
}

func (m *UpdateRowRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *UpdateRowRequest) GetReturnContent() *ReturnContent {
	if m != nil {
		return m.ReturnContent
	}
	return nil
}

type UpdateRowResponse struct {
	Consumed         *ConsumedCapacity `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,2,opt,name=row" json:"row,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *UpdateRowResponse) Reset()                    { *m = UpdateRowResponse{} }
func (m *UpdateRowResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateRowResponse) ProtoMessage()               {}
func (*UpdateRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *UpdateRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *UpdateRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

// *
// 这里允许用户为每列单独设置timestamp，而不是强制整行统一一个timestamp。
// 原因是列都是用统一的结构，该结构本身是带timestamp的，其次强制统一timestamp增强了规范性但是丧失了灵活性，且该规范性没有明显的好处，反而带来了结构的复杂。
type PutRowRequest struct {
	TableName        *string        `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Row              []byte         `protobuf:"bytes,2,req,name=row" json:"row,omitempty"`
	Condition        *Condition     `protobuf:"bytes,3,req,name=condition" json:"condition,omitempty"`
	ReturnContent    *ReturnContent `protobuf:"bytes,4,opt,name=return_content,json=returnContent" json:"return_content,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *PutRowRequest) Reset()                    { *m = PutRowRequest{} }
func (m *PutRowRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRowRequest) ProtoMessage()               {}
func (*PutRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *PutRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *PutRowRequest) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *PutRowRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *PutRowRequest) GetReturnContent() *ReturnContent {
	if m != nil {
		return m.ReturnContent
	}
	return nil
}

type PutRowResponse struct {
	Consumed         *ConsumedCapacity `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,2,opt,name=row" json:"row,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PutRowResponse) Reset()                    { *m = PutRowResponse{} }
func (m *PutRowResponse) String() string            { return proto.CompactTextString(m) }
func (*PutRowResponse) ProtoMessage()               {}
func (*PutRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *PutRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *PutRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

// *
// OTS只支持删除该行的所有列所有版本，不支持：
//  1. 删除所有列的所有小于等于某个版本的所有版本
type DeleteRowRequest struct {
	TableName        *string        `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	PrimaryKey       []byte         `protobuf:"bytes,2,req,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	Condition        *Condition     `protobuf:"bytes,3,req,name=condition" json:"condition,omitempty"`
	ReturnContent    *ReturnContent `protobuf:"bytes,4,opt,name=return_content,json=returnContent" json:"return_content,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *DeleteRowRequest) Reset()                    { *m = DeleteRowRequest{} }
func (m *DeleteRowRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRowRequest) ProtoMessage()               {}
func (*DeleteRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *DeleteRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *DeleteRowRequest) GetPrimaryKey() []byte {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func (m *DeleteRowRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *DeleteRowRequest) GetReturnContent() *ReturnContent {
	if m != nil {
		return m.ReturnContent
	}
	return nil
}

type DeleteRowResponse struct {
	Consumed         *ConsumedCapacity `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,2,opt,name=row" json:"row,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DeleteRowResponse) Reset()                    { *m = DeleteRowResponse{} }
func (m *DeleteRowResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteRowResponse) ProtoMessage()               {}
func (*DeleteRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *DeleteRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *DeleteRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

// *
// HBase支持Batch操作的每行都拥有不同的查询参数，OTS不支持。
type TableInBatchGetRowRequest struct {
	TableName        *string    `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	PrimaryKey       [][]byte   `protobuf:"bytes,2,rep,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	Token            [][]byte   `protobuf:"bytes,3,rep,name=token" json:"token,omitempty"`
	ColumnsToGet     []string   `protobuf:"bytes,4,rep,name=columns_to_get,json=columnsToGet" json:"columns_to_get,omitempty"`
	TimeRange        *TimeRange `protobuf:"bytes,5,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	MaxVersions      *int32     `protobuf:"varint,6,opt,name=max_versions,json=maxVersions" json:"max_versions,omitempty"`
	CacheBlocks      *bool      `protobuf:"varint,7,opt,name=cache_blocks,json=cacheBlocks,def=1" json:"cache_blocks,omitempty"`
	Filter           []byte     `protobuf:"bytes,8,opt,name=filter" json:"filter,omitempty"`
	StartColumn      *string    `protobuf:"bytes,9,opt,name=start_column,json=startColumn" json:"start_column,omitempty"`
	EndColumn        *string    `protobuf:"bytes,10,opt,name=end_column,json=endColumn" json:"end_column,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *TableInBatchGetRowRequest) Reset()                    { *m = TableInBatchGetRowRequest{} }
func (m *TableInBatchGetRowRequest) String() string            { return proto.CompactTextString(m) }
func (*TableInBatchGetRowRequest) ProtoMessage()               {}
func (*TableInBatchGetRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{36} }

const Default_TableInBatchGetRowRequest_CacheBlocks bool = true

func (m *TableInBatchGetRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableInBatchGetRowRequest) GetPrimaryKey() [][]byte {
	if m != nil {
		return m.PrimaryKey
	}
	return nil
}

func (m *TableInBatchGetRowRequest) GetToken() [][]byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *TableInBatchGetRowRequest) GetColumnsToGet() []string {
	if m != nil {
		return m.ColumnsToGet
	}
	return nil
}

func (m *TableInBatchGetRowRequest) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *TableInBatchGetRowRequest) GetMaxVersions() int32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return 0
}

func (m *TableInBatchGetRowRequest) GetCacheBlocks() bool {
	if m != nil && m.CacheBlocks != nil {
		return *m.CacheBlocks
	}
	return Default_TableInBatchGetRowRequest_CacheBlocks
}

func (m *TableInBatchGetRowRequest) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TableInBatchGetRowRequest) GetStartColumn() string {
	if m != nil && m.StartColumn != nil {
		return *m.StartColumn
	}
	return ""
}

func (m *TableInBatchGetRowRequest) GetEndColumn() string {
	if m != nil && m.EndColumn != nil {
		return *m.EndColumn
	}
	return ""
}

type BatchGetRowRequest struct {
	Tables           []*TableInBatchGetRowRequest `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *BatchGetRowRequest) Reset()                    { *m = BatchGetRowRequest{} }
func (m *BatchGetRowRequest) String() string            { return proto.CompactTextString(m) }
func (*BatchGetRowRequest) ProtoMessage()               {}
func (*BatchGetRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{37} }

func (m *BatchGetRowRequest) GetTables() []*TableInBatchGetRowRequest {
	if m != nil {
		return m.Tables
	}
	return nil
}

type RowInBatchGetRowResponse struct {
	IsOk             *bool             `protobuf:"varint,1,req,name=is_ok,json=isOk" json:"is_ok,omitempty"`
	Error            *Error            `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Consumed         *ConsumedCapacity `protobuf:"bytes,3,opt,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,4,opt,name=row" json:"row,omitempty"`
	NextToken        []byte            `protobuf:"bytes,5,opt,name=next_token,json=nextToken" json:"next_token,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RowInBatchGetRowResponse) Reset()                    { *m = RowInBatchGetRowResponse{} }
func (m *RowInBatchGetRowResponse) String() string            { return proto.CompactTextString(m) }
func (*RowInBatchGetRowResponse) ProtoMessage()               {}
func (*RowInBatchGetRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{38} }

func (m *RowInBatchGetRowResponse) GetIsOk() bool {
	if m != nil && m.IsOk != nil {
		return *m.IsOk
	}
	return false
}

func (m *RowInBatchGetRowResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RowInBatchGetRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *RowInBatchGetRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *RowInBatchGetRowResponse) GetNextToken() []byte {
	if m != nil {
		return m.NextToken
	}
	return nil
}

type TableInBatchGetRowResponse struct {
	TableName        *string                     `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Rows             []*RowInBatchGetRowResponse `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *TableInBatchGetRowResponse) Reset()                    { *m = TableInBatchGetRowResponse{} }
func (m *TableInBatchGetRowResponse) String() string            { return proto.CompactTextString(m) }
func (*TableInBatchGetRowResponse) ProtoMessage()               {}
func (*TableInBatchGetRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{39} }

func (m *TableInBatchGetRowResponse) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableInBatchGetRowResponse) GetRows() []*RowInBatchGetRowResponse {
	if m != nil {
		return m.Rows
	}
	return nil
}

type BatchGetRowResponse struct {
	Tables           []*TableInBatchGetRowResponse `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *BatchGetRowResponse) Reset()                    { *m = BatchGetRowResponse{} }
func (m *BatchGetRowResponse) String() string            { return proto.CompactTextString(m) }
func (*BatchGetRowResponse) ProtoMessage()               {}
func (*BatchGetRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{40} }

func (m *BatchGetRowResponse) GetTables() []*TableInBatchGetRowResponse {
	if m != nil {
		return m.Tables
	}
	return nil
}

type RowInBatchWriteRowRequest struct {
	Type             *OperationType `protobuf:"varint,1,req,name=type,enum=otsprotocol.OperationType" json:"type,omitempty"`
	RowChange        []byte         `protobuf:"bytes,2,req,name=row_change,json=rowChange" json:"row_change,omitempty"`
	Condition        *Condition     `protobuf:"bytes,3,req,name=condition" json:"condition,omitempty"`
	ReturnContent    *ReturnContent `protobuf:"bytes,4,opt,name=return_content,json=returnContent" json:"return_content,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RowInBatchWriteRowRequest) Reset()                    { *m = RowInBatchWriteRowRequest{} }
func (m *RowInBatchWriteRowRequest) String() string            { return proto.CompactTextString(m) }
func (*RowInBatchWriteRowRequest) ProtoMessage()               {}
func (*RowInBatchWriteRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{41} }

func (m *RowInBatchWriteRowRequest) GetType() OperationType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return OperationType_PUT
}

func (m *RowInBatchWriteRowRequest) GetRowChange() []byte {
	if m != nil {
		return m.RowChange
	}
	return nil
}

func (m *RowInBatchWriteRowRequest) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *RowInBatchWriteRowRequest) GetReturnContent() *ReturnContent {
	if m != nil {
		return m.ReturnContent
	}
	return nil
}

type TableInBatchWriteRowRequest struct {
	TableName        *string                      `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Rows             []*RowInBatchWriteRowRequest `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *TableInBatchWriteRowRequest) Reset()                    { *m = TableInBatchWriteRowRequest{} }
func (m *TableInBatchWriteRowRequest) String() string            { return proto.CompactTextString(m) }
func (*TableInBatchWriteRowRequest) ProtoMessage()               {}
func (*TableInBatchWriteRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{42} }

func (m *TableInBatchWriteRowRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableInBatchWriteRowRequest) GetRows() []*RowInBatchWriteRowRequest {
	if m != nil {
		return m.Rows
	}
	return nil
}

type BatchWriteRowRequest struct {
	Tables           []*TableInBatchWriteRowRequest `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *BatchWriteRowRequest) Reset()                    { *m = BatchWriteRowRequest{} }
func (m *BatchWriteRowRequest) String() string            { return proto.CompactTextString(m) }
func (*BatchWriteRowRequest) ProtoMessage()               {}
func (*BatchWriteRowRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

func (m *BatchWriteRowRequest) GetTables() []*TableInBatchWriteRowRequest {
	if m != nil {
		return m.Tables
	}
	return nil
}

type RowInBatchWriteRowResponse struct {
	IsOk             *bool             `protobuf:"varint,1,req,name=is_ok,json=isOk" json:"is_ok,omitempty"`
	Error            *Error            `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Consumed         *ConsumedCapacity `protobuf:"bytes,3,opt,name=consumed" json:"consumed,omitempty"`
	Row              []byte            `protobuf:"bytes,4,opt,name=row" json:"row,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RowInBatchWriteRowResponse) Reset()                    { *m = RowInBatchWriteRowResponse{} }
func (m *RowInBatchWriteRowResponse) String() string            { return proto.CompactTextString(m) }
func (*RowInBatchWriteRowResponse) ProtoMessage()               {}
func (*RowInBatchWriteRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{44} }

func (m *RowInBatchWriteRowResponse) GetIsOk() bool {
	if m != nil && m.IsOk != nil {
		return *m.IsOk
	}
	return false
}

func (m *RowInBatchWriteRowResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *RowInBatchWriteRowResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *RowInBatchWriteRowResponse) GetRow() []byte {
	if m != nil {
		return m.Row
	}
	return nil
}

type TableInBatchWriteRowResponse struct {
	TableName        *string                       `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Rows             []*RowInBatchWriteRowResponse `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *TableInBatchWriteRowResponse) Reset()                    { *m = TableInBatchWriteRowResponse{} }
func (m *TableInBatchWriteRowResponse) String() string            { return proto.CompactTextString(m) }
func (*TableInBatchWriteRowResponse) ProtoMessage()               {}
func (*TableInBatchWriteRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{45} }

func (m *TableInBatchWriteRowResponse) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *TableInBatchWriteRowResponse) GetRows() []*RowInBatchWriteRowResponse {
	if m != nil {
		return m.Rows
	}
	return nil
}

type BatchWriteRowResponse struct {
	Tables           []*TableInBatchWriteRowResponse `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *BatchWriteRowResponse) Reset()                    { *m = BatchWriteRowResponse{} }
func (m *BatchWriteRowResponse) String() string            { return proto.CompactTextString(m) }
func (*BatchWriteRowResponse) ProtoMessage()               {}
func (*BatchWriteRowResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{46} }

func (m *BatchWriteRowResponse) GetTables() []*TableInBatchWriteRowResponse {
	if m != nil {
		return m.Tables
	}
	return nil
}

// *
// HBase支持以下参数：
//     1. TimeRange或指定time
//     2. Filter（根据列值或列名来过滤）
// 我们只支持给同版本的选择条件。
type GetRangeRequest struct {
	TableName                *string    `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	Direction                *Direction `protobuf:"varint,2,req,name=direction,enum=otsprotocol.Direction" json:"direction,omitempty"`
	ColumnsToGet             []string   `protobuf:"bytes,3,rep,name=columns_to_get,json=columnsToGet" json:"columns_to_get,omitempty"`
	TimeRange                *TimeRange `protobuf:"bytes,4,opt,name=time_range,json=timeRange" json:"time_range,omitempty"`
	MaxVersions              *int32     `protobuf:"varint,5,opt,name=max_versions,json=maxVersions" json:"max_versions,omitempty"`
	Limit                    *int32     `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	InclusiveStartPrimaryKey []byte     `protobuf:"bytes,7,req,name=inclusive_start_primary_key,json=inclusiveStartPrimaryKey" json:"inclusive_start_primary_key,omitempty"`
	ExclusiveEndPrimaryKey   []byte     `protobuf:"bytes,8,req,name=exclusive_end_primary_key,json=exclusiveEndPrimaryKey" json:"exclusive_end_primary_key,omitempty"`
	CacheBlocks              *bool      `protobuf:"varint,9,opt,name=cache_blocks,json=cacheBlocks,def=1" json:"cache_blocks,omitempty"`
	Filter                   []byte     `protobuf:"bytes,10,opt,name=filter" json:"filter,omitempty"`
	StartColumn              *string    `protobuf:"bytes,11,opt,name=start_column,json=startColumn" json:"start_column,omitempty"`
	EndColumn                *string    `protobuf:"bytes,12,opt,name=end_column,json=endColumn" json:"end_column,omitempty"`
	Token                    []byte     `protobuf:"bytes,13,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized         []byte     `json:"-"`
}

func (m *GetRangeRequest) Reset()                    { *m = GetRangeRequest{} }
func (m *GetRangeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRangeRequest) ProtoMessage()               {}
func (*GetRangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{47} }

const Default_GetRangeRequest_CacheBlocks bool = true

func (m *GetRangeRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *GetRangeRequest) GetDirection() Direction {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return Direction_FORWARD
}

func (m *GetRangeRequest) GetColumnsToGet() []string {
	if m != nil {
		return m.ColumnsToGet
	}
	return nil
}

func (m *GetRangeRequest) GetTimeRange() *TimeRange {
	if m != nil {
		return m.TimeRange
	}
	return nil
}

func (m *GetRangeRequest) GetMaxVersions() int32 {
	if m != nil && m.MaxVersions != nil {
		return *m.MaxVersions
	}
	return 0
}

func (m *GetRangeRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *GetRangeRequest) GetInclusiveStartPrimaryKey() []byte {
	if m != nil {
		return m.InclusiveStartPrimaryKey
	}
	return nil
}

func (m *GetRangeRequest) GetExclusiveEndPrimaryKey() []byte {
	if m != nil {
		return m.ExclusiveEndPrimaryKey
	}
	return nil
}

func (m *GetRangeRequest) GetCacheBlocks() bool {
	if m != nil && m.CacheBlocks != nil {
		return *m.CacheBlocks
	}
	return Default_GetRangeRequest_CacheBlocks
}

func (m *GetRangeRequest) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GetRangeRequest) GetStartColumn() string {
	if m != nil && m.StartColumn != nil {
		return *m.StartColumn
	}
	return ""
}

func (m *GetRangeRequest) GetEndColumn() string {
	if m != nil && m.EndColumn != nil {
		return *m.EndColumn
	}
	return ""
}

func (m *GetRangeRequest) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type GetRangeResponse struct {
	Consumed            *ConsumedCapacity `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Rows                []byte            `protobuf:"bytes,2,req,name=rows" json:"rows,omitempty"`
	NextStartPrimaryKey []byte            `protobuf:"bytes,3,opt,name=next_start_primary_key,json=nextStartPrimaryKey" json:"next_start_primary_key,omitempty"`
	NextToken           []byte            `protobuf:"bytes,4,opt,name=next_token,json=nextToken" json:"next_token,omitempty"`
	XXX_unrecognized    []byte            `json:"-"`
}

func (m *GetRangeResponse) Reset()                    { *m = GetRangeResponse{} }
func (m *GetRangeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRangeResponse) ProtoMessage()               {}
func (*GetRangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{48} }

func (m *GetRangeResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *GetRangeResponse) GetRows() []byte {
	if m != nil {
		return m.Rows
	}
	return nil
}

func (m *GetRangeResponse) GetNextStartPrimaryKey() []byte {
	if m != nil {
		return m.NextStartPrimaryKey
	}
	return nil
}

func (m *GetRangeResponse) GetNextToken() []byte {
	if m != nil {
		return m.NextToken
	}
	return nil
}

type ListStreamRequest struct {
	TableName        *string `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListStreamRequest) Reset()                    { *m = ListStreamRequest{} }
func (m *ListStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*ListStreamRequest) ProtoMessage()               {}
func (*ListStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{49} }

func (m *ListStreamRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type Stream struct {
	StreamId         *string `protobuf:"bytes,1,req,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	TableName        *string `protobuf:"bytes,2,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	CreationTime     *int64  `protobuf:"varint,3,req,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Stream) Reset()                    { *m = Stream{} }
func (m *Stream) String() string            { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()               {}
func (*Stream) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{50} }

func (m *Stream) GetStreamId() string {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return ""
}

func (m *Stream) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *Stream) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

type ListStreamResponse struct {
	Streams          []*Stream `protobuf:"bytes,1,rep,name=streams" json:"streams,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ListStreamResponse) Reset()                    { *m = ListStreamResponse{} }
func (m *ListStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*ListStreamResponse) ProtoMessage()               {}
func (*ListStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{51} }

func (m *ListStreamResponse) GetStreams() []*Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

type StreamShard struct {
	ShardId          *string `protobuf:"bytes,1,req,name=shard_id,json=shardId" json:"shard_id,omitempty"`
	ParentId         *string `protobuf:"bytes,2,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	ParentSiblingId  *string `protobuf:"bytes,3,opt,name=parent_sibling_id,json=parentSiblingId" json:"parent_sibling_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StreamShard) Reset()                    { *m = StreamShard{} }
func (m *StreamShard) String() string            { return proto.CompactTextString(m) }
func (*StreamShard) ProtoMessage()               {}
func (*StreamShard) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{52} }

func (m *StreamShard) GetShardId() string {
	if m != nil && m.ShardId != nil {
		return *m.ShardId
	}
	return ""
}

func (m *StreamShard) GetParentId() string {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return ""
}

func (m *StreamShard) GetParentSiblingId() string {
	if m != nil && m.ParentSiblingId != nil {
		return *m.ParentSiblingId
	}
	return ""
}

type DescribeStreamRequest struct {
	StreamId              *string `protobuf:"bytes,1,req,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	InclusiveStartShardId *string `protobuf:"bytes,2,opt,name=inclusive_start_shard_id,json=inclusiveStartShardId" json:"inclusive_start_shard_id,omitempty"`
	ShardLimit            *int32  `protobuf:"varint,3,opt,name=shard_limit,json=shardLimit" json:"shard_limit,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *DescribeStreamRequest) Reset()                    { *m = DescribeStreamRequest{} }
func (m *DescribeStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeStreamRequest) ProtoMessage()               {}
func (*DescribeStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{53} }

func (m *DescribeStreamRequest) GetStreamId() string {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return ""
}

func (m *DescribeStreamRequest) GetInclusiveStartShardId() string {
	if m != nil && m.InclusiveStartShardId != nil {
		return *m.InclusiveStartShardId
	}
	return ""
}

func (m *DescribeStreamRequest) GetShardLimit() int32 {
	if m != nil && m.ShardLimit != nil {
		return *m.ShardLimit
	}
	return 0
}

type DescribeStreamResponse struct {
	StreamId         *string        `protobuf:"bytes,1,req,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	ExpirationTime   *int32         `protobuf:"varint,2,req,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	TableName        *string        `protobuf:"bytes,3,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	CreationTime     *int64         `protobuf:"varint,4,req,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	StreamStatus     *StreamStatus  `protobuf:"varint,5,req,name=stream_status,json=streamStatus,enum=otsprotocol.StreamStatus" json:"stream_status,omitempty"`
	Shards           []*StreamShard `protobuf:"bytes,6,rep,name=shards" json:"shards,omitempty"`
	NextShardId      *string        `protobuf:"bytes,7,opt,name=next_shard_id,json=nextShardId" json:"next_shard_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *DescribeStreamResponse) Reset()                    { *m = DescribeStreamResponse{} }
func (m *DescribeStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeStreamResponse) ProtoMessage()               {}
func (*DescribeStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{54} }

func (m *DescribeStreamResponse) GetStreamId() string {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return ""
}

func (m *DescribeStreamResponse) GetExpirationTime() int32 {
	if m != nil && m.ExpirationTime != nil {
		return *m.ExpirationTime
	}
	return 0
}

func (m *DescribeStreamResponse) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *DescribeStreamResponse) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *DescribeStreamResponse) GetStreamStatus() StreamStatus {
	if m != nil && m.StreamStatus != nil {
		return *m.StreamStatus
	}
	return StreamStatus_STREAM_ENABLING
}

func (m *DescribeStreamResponse) GetShards() []*StreamShard {
	if m != nil {
		return m.Shards
	}
	return nil
}

func (m *DescribeStreamResponse) GetNextShardId() string {
	if m != nil && m.NextShardId != nil {
		return *m.NextShardId
	}
	return ""
}

type GetShardIteratorRequest struct {
	StreamId         *string `protobuf:"bytes,1,req,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	ShardId          *string `protobuf:"bytes,2,req,name=shard_id,json=shardId" json:"shard_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetShardIteratorRequest) Reset()                    { *m = GetShardIteratorRequest{} }
func (m *GetShardIteratorRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShardIteratorRequest) ProtoMessage()               {}
func (*GetShardIteratorRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{55} }

func (m *GetShardIteratorRequest) GetStreamId() string {
	if m != nil && m.StreamId != nil {
		return *m.StreamId
	}
	return ""
}

func (m *GetShardIteratorRequest) GetShardId() string {
	if m != nil && m.ShardId != nil {
		return *m.ShardId
	}
	return ""
}

type GetShardIteratorResponse struct {
	ShardIterator    *string `protobuf:"bytes,1,req,name=shard_iterator,json=shardIterator" json:"shard_iterator,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetShardIteratorResponse) Reset()                    { *m = GetShardIteratorResponse{} }
func (m *GetShardIteratorResponse) String() string            { return proto.CompactTextString(m) }
func (*GetShardIteratorResponse) ProtoMessage()               {}
func (*GetShardIteratorResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{56} }

func (m *GetShardIteratorResponse) GetShardIterator() string {
	if m != nil && m.ShardIterator != nil {
		return *m.ShardIterator
	}
	return ""
}

type GetStreamRecordRequest struct {
	ShardIterator    *string `protobuf:"bytes,1,req,name=shard_iterator,json=shardIterator" json:"shard_iterator,omitempty"`
	Limit            *int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetStreamRecordRequest) Reset()                    { *m = GetStreamRecordRequest{} }
func (m *GetStreamRecordRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStreamRecordRequest) ProtoMessage()               {}
func (*GetStreamRecordRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{57} }

func (m *GetStreamRecordRequest) GetShardIterator() string {
	if m != nil && m.ShardIterator != nil {
		return *m.ShardIterator
	}
	return ""
}

func (m *GetStreamRecordRequest) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type GetStreamRecordResponse struct {
	StreamRecords     []*GetStreamRecordResponse_StreamRecord `protobuf:"bytes,1,rep,name=stream_records,json=streamRecords" json:"stream_records,omitempty"`
	NextShardIterator *string                                 `protobuf:"bytes,2,opt,name=next_shard_iterator,json=nextShardIterator" json:"next_shard_iterator,omitempty"`
	XXX_unrecognized  []byte                                  `json:"-"`
}

func (m *GetStreamRecordResponse) Reset()                    { *m = GetStreamRecordResponse{} }
func (m *GetStreamRecordResponse) String() string            { return proto.CompactTextString(m) }
func (*GetStreamRecordResponse) ProtoMessage()               {}
func (*GetStreamRecordResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{58} }

func (m *GetStreamRecordResponse) GetStreamRecords() []*GetStreamRecordResponse_StreamRecord {
	if m != nil {
		return m.StreamRecords
	}
	return nil
}

func (m *GetStreamRecordResponse) GetNextShardIterator() string {
	if m != nil && m.NextShardIterator != nil {
		return *m.NextShardIterator
	}
	return ""
}

type GetStreamRecordResponse_StreamRecord struct {
	ActionType       *ActionType `protobuf:"varint,1,req,name=action_type,json=actionType,enum=otsprotocol.ActionType" json:"action_type,omitempty"`
	Record           []byte      `protobuf:"bytes,2,req,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GetStreamRecordResponse_StreamRecord) Reset()         { *m = GetStreamRecordResponse_StreamRecord{} }
func (m *GetStreamRecordResponse_StreamRecord) String() string { return proto.CompactTextString(m) }
func (*GetStreamRecordResponse_StreamRecord) ProtoMessage()    {}
func (*GetStreamRecordResponse_StreamRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{58, 0}
}

func (m *GetStreamRecordResponse_StreamRecord) GetActionType() ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionType_PUT_ROW
}

func (m *GetStreamRecordResponse_StreamRecord) GetRecord() []byte {
	if m != nil {
		return m.Record
	}
	return nil
}

// +++++ ComputeSplitPointsBySize  +++++
type ComputeSplitPointsBySizeRequest struct {
	TableName        *string `protobuf:"bytes,1,req,name=table_name,json=tableName" json:"table_name,omitempty"`
	SplitSize        *int64  `protobuf:"varint,2,req,name=split_size,json=splitSize" json:"split_size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ComputeSplitPointsBySizeRequest) Reset()         { *m = ComputeSplitPointsBySizeRequest{} }
func (m *ComputeSplitPointsBySizeRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeSplitPointsBySizeRequest) ProtoMessage()    {}
func (*ComputeSplitPointsBySizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{59}
}

func (m *ComputeSplitPointsBySizeRequest) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *ComputeSplitPointsBySizeRequest) GetSplitSize() int64 {
	if m != nil && m.SplitSize != nil {
		return *m.SplitSize
	}
	return 0
}

type ComputeSplitPointsBySizeResponse struct {
	Consumed *ConsumedCapacity   `protobuf:"bytes,1,req,name=consumed" json:"consumed,omitempty"`
	Schema   []*PrimaryKeySchema `protobuf:"bytes,2,rep,name=schema" json:"schema,omitempty"`
	// *
	// Split points between splits, in the increasing order
	//
	// A split is a consecutive range of primary keys,
	// whose data size is about split_size specified in the request.
	// The size could be hard to be precise.
	//
	// A split point is an array of primary-key column w.r.t. table schema,
	// which is never longer than that of table schema.
	// Tailing -inf will be omitted to reduce transmission payloads.
	SplitPoints      [][]byte                                          `protobuf:"bytes,3,rep,name=split_points,json=splitPoints" json:"split_points,omitempty"`
	Locations        []*ComputeSplitPointsBySizeResponse_SplitLocation `protobuf:"bytes,4,rep,name=locations" json:"locations,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *ComputeSplitPointsBySizeResponse) Reset()         { *m = ComputeSplitPointsBySizeResponse{} }
func (m *ComputeSplitPointsBySizeResponse) String() string { return proto.CompactTextString(m) }
func (*ComputeSplitPointsBySizeResponse) ProtoMessage()    {}
func (*ComputeSplitPointsBySizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{60}
}

func (m *ComputeSplitPointsBySizeResponse) GetConsumed() *ConsumedCapacity {
	if m != nil {
		return m.Consumed
	}
	return nil
}

func (m *ComputeSplitPointsBySizeResponse) GetSchema() []*PrimaryKeySchema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *ComputeSplitPointsBySizeResponse) GetSplitPoints() [][]byte {
	if m != nil {
		return m.SplitPoints
	}
	return nil
}

func (m *ComputeSplitPointsBySizeResponse) GetLocations() []*ComputeSplitPointsBySizeResponse_SplitLocation {
	if m != nil {
		return m.Locations
	}
	return nil
}

// *
// Locations where splits lies in.
//
// By the managed nature of TableStore, these locations are no more than hints.
// If a location is not suitable to be seen, an empty string will be placed.
type ComputeSplitPointsBySizeResponse_SplitLocation struct {
	Location         *string `protobuf:"bytes,1,req,name=location" json:"location,omitempty"`
	Repeat           *int64  `protobuf:"zigzag64,2,req,name=repeat" json:"repeat,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ComputeSplitPointsBySizeResponse_SplitLocation) Reset() {
	*m = ComputeSplitPointsBySizeResponse_SplitLocation{}
}
func (m *ComputeSplitPointsBySizeResponse_SplitLocation) String() string {
	return proto.CompactTextString(m)
}
func (*ComputeSplitPointsBySizeResponse_SplitLocation) ProtoMessage() {}
func (*ComputeSplitPointsBySizeResponse_SplitLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{60, 0}
}

func (m *ComputeSplitPointsBySizeResponse_SplitLocation) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *ComputeSplitPointsBySizeResponse_SplitLocation) GetRepeat() int64 {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return 0
}

func init() {
	proto.RegisterType((*Error)(nil), "otsprotocol.Error")
	proto.RegisterType((*PrimaryKeySchema)(nil), "otsprotocol.PrimaryKeySchema")
	proto.RegisterType((*PartitionRange)(nil), "otsprotocol.PartitionRange")
	proto.RegisterType((*TableOptions)(nil), "otsprotocol.TableOptions")
	proto.RegisterType((*TableMeta)(nil), "otsprotocol.TableMeta")
	proto.RegisterType((*Condition)(nil), "otsprotocol.Condition")
	proto.RegisterType((*CapacityUnit)(nil), "otsprotocol.CapacityUnit")
	proto.RegisterType((*ReservedThroughputDetails)(nil), "otsprotocol.ReservedThroughputDetails")
	proto.RegisterType((*ReservedThroughput)(nil), "otsprotocol.ReservedThroughput")
	proto.RegisterType((*ConsumedCapacity)(nil), "otsprotocol.ConsumedCapacity")
	proto.RegisterType((*StreamSpecification)(nil), "otsprotocol.StreamSpecification")
	proto.RegisterType((*StreamDetails)(nil), "otsprotocol.StreamDetails")
	proto.RegisterType((*CreateTableRequest)(nil), "otsprotocol.CreateTableRequest")
	proto.RegisterType((*CreateTableResponse)(nil), "otsprotocol.CreateTableResponse")
	proto.RegisterType((*UpdateTableRequest)(nil), "otsprotocol.UpdateTableRequest")
	proto.RegisterType((*UpdateTableResponse)(nil), "otsprotocol.UpdateTableResponse")
	proto.RegisterType((*DescribeTableRequest)(nil), "otsprotocol.DescribeTableRequest")
	proto.RegisterType((*DescribeTableResponse)(nil), "otsprotocol.DescribeTableResponse")
	proto.RegisterType((*ListTableRequest)(nil), "otsprotocol.ListTableRequest")
	proto.RegisterType((*ListTableResponse)(nil), "otsprotocol.ListTableResponse")
	proto.RegisterType((*DeleteTableRequest)(nil), "otsprotocol.DeleteTableRequest")
	proto.RegisterType((*DeleteTableResponse)(nil), "otsprotocol.DeleteTableResponse")
	proto.RegisterType((*LoadTableRequest)(nil), "otsprotocol.LoadTableRequest")
	proto.RegisterType((*LoadTableResponse)(nil), "otsprotocol.LoadTableResponse")
	proto.RegisterType((*UnloadTableRequest)(nil), "otsprotocol.UnloadTableRequest")
	proto.RegisterType((*UnloadTableResponse)(nil), "otsprotocol.UnloadTableResponse")
	proto.RegisterType((*TimeRange)(nil), "otsprotocol.TimeRange")
	proto.RegisterType((*ReturnContent)(nil), "otsprotocol.ReturnContent")
	proto.RegisterType((*GetRowRequest)(nil), "otsprotocol.GetRowRequest")
	proto.RegisterType((*GetRowResponse)(nil), "otsprotocol.GetRowResponse")
	proto.RegisterType((*UpdateRowRequest)(nil), "otsprotocol.UpdateRowRequest")
	proto.RegisterType((*UpdateRowResponse)(nil), "otsprotocol.UpdateRowResponse")
	proto.RegisterType((*PutRowRequest)(nil), "otsprotocol.PutRowRequest")
	proto.RegisterType((*PutRowResponse)(nil), "otsprotocol.PutRowResponse")
	proto.RegisterType((*DeleteRowRequest)(nil), "otsprotocol.DeleteRowRequest")
	proto.RegisterType((*DeleteRowResponse)(nil), "otsprotocol.DeleteRowResponse")
	proto.RegisterType((*TableInBatchGetRowRequest)(nil), "otsprotocol.TableInBatchGetRowRequest")
	proto.RegisterType((*BatchGetRowRequest)(nil), "otsprotocol.BatchGetRowRequest")
	proto.RegisterType((*RowInBatchGetRowResponse)(nil), "otsprotocol.RowInBatchGetRowResponse")
	proto.RegisterType((*TableInBatchGetRowResponse)(nil), "otsprotocol.TableInBatchGetRowResponse")
	proto.RegisterType((*BatchGetRowResponse)(nil), "otsprotocol.BatchGetRowResponse")
	proto.RegisterType((*RowInBatchWriteRowRequest)(nil), "otsprotocol.RowInBatchWriteRowRequest")
	proto.RegisterType((*TableInBatchWriteRowRequest)(nil), "otsprotocol.TableInBatchWriteRowRequest")
	proto.RegisterType((*BatchWriteRowRequest)(nil), "otsprotocol.BatchWriteRowRequest")
	proto.RegisterType((*RowInBatchWriteRowResponse)(nil), "otsprotocol.RowInBatchWriteRowResponse")
	proto.RegisterType((*TableInBatchWriteRowResponse)(nil), "otsprotocol.TableInBatchWriteRowResponse")
	proto.RegisterType((*BatchWriteRowResponse)(nil), "otsprotocol.BatchWriteRowResponse")
	proto.RegisterType((*GetRangeRequest)(nil), "otsprotocol.GetRangeRequest")
	proto.RegisterType((*GetRangeResponse)(nil), "otsprotocol.GetRangeResponse")
	proto.RegisterType((*ListStreamRequest)(nil), "otsprotocol.ListStreamRequest")
	proto.RegisterType((*Stream)(nil), "otsprotocol.Stream")
	proto.RegisterType((*ListStreamResponse)(nil), "otsprotocol.ListStreamResponse")
	proto.RegisterType((*StreamShard)(nil), "otsprotocol.StreamShard")
	proto.RegisterType((*DescribeStreamRequest)(nil), "otsprotocol.DescribeStreamRequest")
	proto.RegisterType((*DescribeStreamResponse)(nil), "otsprotocol.DescribeStreamResponse")
	proto.RegisterType((*GetShardIteratorRequest)(nil), "otsprotocol.GetShardIteratorRequest")
	proto.RegisterType((*GetShardIteratorResponse)(nil), "otsprotocol.GetShardIteratorResponse")
	proto.RegisterType((*GetStreamRecordRequest)(nil), "otsprotocol.GetStreamRecordRequest")
	proto.RegisterType((*GetStreamRecordResponse)(nil), "otsprotocol.GetStreamRecordResponse")
	proto.RegisterType((*GetStreamRecordResponse_StreamRecord)(nil), "otsprotocol.GetStreamRecordResponse.StreamRecord")
	proto.RegisterType((*ComputeSplitPointsBySizeRequest)(nil), "otsprotocol.ComputeSplitPointsBySizeRequest")
	proto.RegisterType((*ComputeSplitPointsBySizeResponse)(nil), "otsprotocol.ComputeSplitPointsBySizeResponse")
	proto.RegisterType((*ComputeSplitPointsBySizeResponse_SplitLocation)(nil), "otsprotocol.ComputeSplitPointsBySizeResponse.SplitLocation")
	proto.RegisterEnum("otsprotocol.PrimaryKeyType", PrimaryKeyType_name, PrimaryKeyType_value)
	proto.RegisterEnum("otsprotocol.PrimaryKeyOption", PrimaryKeyOption_name, PrimaryKeyOption_value)
	proto.RegisterEnum("otsprotocol.BloomFilterType", BloomFilterType_name, BloomFilterType_value)
	proto.RegisterEnum("otsprotocol.TableStatus", TableStatus_name, TableStatus_value)
	proto.RegisterEnum("otsprotocol.RowExistenceExpectation", RowExistenceExpectation_name, RowExistenceExpectation_value)
	proto.RegisterEnum("otsprotocol.ReturnType", ReturnType_name, ReturnType_value)
	proto.RegisterEnum("otsprotocol.OperationType", OperationType_name, OperationType_value)
	proto.RegisterEnum("otsprotocol.Direction", Direction_name, Direction_value)
	proto.RegisterEnum("otsprotocol.StreamStatus", StreamStatus_name, StreamStatus_value)
	proto.RegisterEnum("otsprotocol.ActionType", ActionType_name, ActionType_value)
}

func init() { proto.RegisterFile("table_store.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x5a, 0x4d, 0x73, 0xdb, 0xc6,
	0xf9, 0x0f, 0x00, 0x52, 0x12, 0x1f, 0xbe, 0x88, 0x5a, 0xd9, 0x0e, 0x25, 0xc7, 0x63, 0xfd, 0x91,
	0x17, 0x33, 0x9a, 0x7f, 0xd5, 0x44, 0x89, 0x5b, 0x3b, 0x9e, 0xba, 0xa1, 0x28, 0xc6, 0xe5, 0x44,
	0xa6, 0x94, 0x25, 0x95, 0x38, 0x9d, 0xe9, 0x20, 0x10, 0xb0, 0x91, 0x50, 0x93, 0x00, 0xb3, 0x58,
	0xbd, 0x79, 0x7a, 0x68, 0x0f, 0x9d, 0xe9, 0x29, 0x3d, 0xf7, 0xde, 0x43, 0xbf, 0x40, 0xa7, 0xed,
	0x07, 0xe8, 0xa1, 0xd3, 0x0f, 0xd0, 0x53, 0x4f, 0xbd, 0xf4, 0x03, 0xf4, 0xdc, 0xe9, 0xec, 0x0b,
	0x40, 0x00, 0x82, 0x44, 0x29, 0x8e, 0xc7, 0xb9, 0x71, 0x9f, 0x7d, 0xf6, 0xd9, 0x67, 0x7f, 0xcf,
	0xdb, 0xee, 0x03, 0xc2, 0x02, 0xb3, 0xf7, 0x86, 0xc4, 0x0a, 0x59, 0x40, 0xc9, 0xda, 0x98, 0x06,
	0x2c, 0x40, 0xe5, 0x80, 0x85, 0xe2, 0x97, 0x13, 0x0c, 0xcd, 0xbb, 0x50, 0xec, 0x50, 0x1a, 0x50,
	0x84, 0xa0, 0xe0, 0x04, 0x2e, 0x69, 0x68, 0x2b, 0x7a, 0xb3, 0x84, 0xc5, 0x6f, 0xd4, 0x80, 0xd9,
	0x11, 0x09, 0x43, 0x7b, 0x9f, 0x34, 0xf4, 0x15, 0xad, 0x59, 0xc2, 0xd1, 0xd0, 0xfc, 0x5a, 0x83,
	0xfa, 0x0e, 0xf5, 0x46, 0x36, 0x3d, 0xfd, 0x98, 0x9c, 0xf6, 0x9d, 0x03, 0x32, 0xb2, 0xb9, 0x08,
	0xdf, 0x1e, 0xc5, 0x22, 0xf8, 0x6f, 0xf4, 0x7d, 0x28, 0xb0, 0xd3, 0x31, 0x5f, 0xaf, 0x37, 0x6b,
	0xeb, 0x37, 0xd7, 0x12, 0x7b, 0xaf, 0x4d, 0x04, 0x0c, 0x4e, 0xc7, 0x04, 0x0b, 0x46, 0x74, 0x17,
	0x66, 0x82, 0x31, 0xf3, 0x02, 0xbf, 0x61, 0xac, 0x68, 0xcd, 0xda, 0xfa, 0xad, 0x73, 0x96, 0x6c,
	0x0b, 0x26, 0xac, 0x98, 0xcd, 0x7b, 0x50, 0xdb, 0xb1, 0x29, 0xf3, 0x04, 0xd1, 0xf6, 0xf7, 0x09,
	0xba, 0x06, 0xc5, 0x3d, 0xb2, 0xef, 0xf9, 0x42, 0x9d, 0x0a, 0x96, 0x03, 0x54, 0x07, 0x83, 0xf8,
	0xae, 0x50, 0xa7, 0x82, 0xf9, 0x4f, 0xf3, 0xbf, 0x1a, 0x54, 0x06, 0x1c, 0x24, 0x29, 0x31, 0x44,
	0x2b, 0x50, 0x61, 0xde, 0x88, 0x58, 0x2c, 0xb0, 0x86, 0xde, 0x11, 0x3f, 0x8e, 0xd6, 0x2c, 0x62,
	0xe0, 0xb4, 0x41, 0xb0, 0xe5, 0x1d, 0x11, 0xf4, 0x7f, 0x50, 0x19, 0xd9, 0x27, 0xd6, 0x11, 0xa1,
	0x21, 0x5f, 0x21, 0xc0, 0x29, 0xe2, 0xf2, 0xc8, 0x3e, 0xf9, 0x54, 0x91, 0xd0, 0x4f, 0x60, 0x61,
	0x6f, 0x18, 0x04, 0x23, 0xeb, 0x4b, 0x6f, 0xc8, 0x08, 0xb5, 0x04, 0x08, 0xf2, 0x44, 0xaf, 0xa5,
	0x4e, 0xb4, 0xc1, 0xb9, 0x3e, 0x12, 0x4c, 0x02, 0x85, 0xf9, 0xbd, 0x34, 0x01, 0xdd, 0x02, 0xd8,
	0x1b, 0x06, 0xce, 0x53, 0x2b, 0xf4, 0x9e, 0x91, 0x46, 0x41, 0x6c, 0x55, 0x12, 0x94, 0xbe, 0xf7,
	0x8c, 0xa0, 0x0f, 0xe1, 0x96, 0x4b, 0x8e, 0x3c, 0x9b, 0xeb, 0x6e, 0x39, 0x64, 0x38, 0x8c, 0xd4,
	0xb2, 0x3c, 0xdf, 0x0a, 0x89, 0xd3, 0x28, 0xae, 0x68, 0x4d, 0x03, 0x2f, 0xc5, 0x4c, 0x6d, 0x32,
	0x1c, 0x2a, 0x35, 0xbb, 0x7e, 0x9f, 0x38, 0xe6, 0xcf, 0xa1, 0x24, 0xce, 0xff, 0x98, 0x30, 0x9b,
	0xef, 0x26, 0x3d, 0x26, 0x61, 0xc9, 0x92, 0xa0, 0xf4, 0xb8, 0x39, 0x1f, 0x42, 0x79, 0x2c, 0x4d,
	0x60, 0x3d, 0x25, 0xa7, 0x0d, 0x7d, 0xc5, 0x68, 0x96, 0xcf, 0x35, 0x91, 0x74, 0x0b, 0x0c, 0xe3,
	0x98, 0x62, 0xfe, 0x4a, 0x83, 0x52, 0x3b, 0xf0, 0x5d, 0x61, 0x27, 0xd4, 0x85, 0x2a, 0x0d, 0x8e,
	0x2d, 0x72, 0xe2, 0x85, 0x8c, 0xf8, 0x8e, 0xdc, 0xaf, 0xb6, 0xfe, 0x46, 0x4a, 0x1e, 0x0e, 0x8e,
	0x3b, 0x11, 0x43, 0xe7, 0x64, 0x4c, 0x1c, 0x26, 0x8e, 0x81, 0x2b, 0x34, 0x31, 0x81, 0xde, 0x86,
	0xba, 0x13, 0x0c, 0x0f, 0x47, 0xbe, 0xe5, 0x44, 0xe2, 0x85, 0x59, 0x2a, 0x78, 0x5e, 0xd2, 0xe3,
	0x5d, 0xcd, 0x7b, 0x50, 0x69, 0xdb, 0x63, 0xdb, 0xf1, 0xd8, 0xe9, 0xae, 0xef, 0x31, 0xee, 0xb6,
	0x94, 0xd8, 0xae, 0xb2, 0xb3, 0xf8, 0xcd, 0x9d, 0xe7, 0x98, 0x7a, 0x8c, 0x28, 0xd3, 0xca, 0x81,
	0xf9, 0x27, 0x0d, 0x96, 0x30, 0x09, 0x09, 0x3d, 0x22, 0xee, 0xe0, 0x80, 0x06, 0x87, 0xfb, 0x07,
	0xe3, 0x43, 0xb6, 0x49, 0x98, 0xed, 0x0d, 0x43, 0xf4, 0x10, 0xaa, 0x8e, 0x92, 0x6b, 0x1d, 0xfa,
	0x1e, 0x13, 0xa7, 0x29, 0xaf, 0x2f, 0xa5, 0x4e, 0x93, 0xdc, 0x19, 0x57, 0x9c, 0xa4, 0x1e, 0xff,
	0x0f, 0x68, 0x68, 0x87, 0xcc, 0xf2, 0x7c, 0x87, 0x12, 0x3b, 0x24, 0x16, 0xf7, 0x38, 0xe1, 0xa9,
	0x06, 0xae, 0xf3, 0x99, 0xae, 0x9a, 0x18, 0x78, 0x23, 0x12, 0x73, 0xbb, 0x24, 0xc9, 0x6d, 0x08,
	0x63, 0x0b, 0xee, 0x4d, 0x32, 0xe1, 0x36, 0x07, 0x80, 0xce, 0x2a, 0xfe, 0xbc, 0x1a, 0x9b, 0x18,
	0xea, 0xed, 0xc0, 0x0f, 0x0f, 0x47, 0xc4, 0x8d, 0xb8, 0x9e, 0x5b, 0xa6, 0x03, 0x8b, 0x7d, 0x46,
	0x89, 0x3d, 0xea, 0x8f, 0x89, 0xe3, 0x7d, 0xe9, 0x39, 0xc2, 0xda, 0xe8, 0x75, 0xa8, 0x12, 0x5f,
	0xa5, 0x32, 0x3e, 0x2b, 0xc4, 0xce, 0xe1, 0x8a, 0x24, 0xca, 0x15, 0xe8, 0x0e, 0xcc, 0x93, 0x93,
	0xb1, 0x47, 0x65, 0x30, 0x28, 0xf8, 0xb8, 0xfd, 0x6a, 0x13, 0xb2, 0x80, 0xe3, 0xf7, 0x1a, 0x54,
	0xe5, 0x9a, 0xc8, 0x78, 0x97, 0x92, 0x7f, 0x13, 0x4a, 0x72, 0xd6, 0xf2, 0x5c, 0x95, 0x11, 0xe7,
	0x24, 0xa1, 0xeb, 0xe6, 0x6d, 0x6e, 0xe4, 0x6d, 0x8e, 0x9a, 0x20, 0xec, 0x63, 0xa9, 0xfd, 0x04,
	0x67, 0x41, 0xd8, 0xad, 0xc6, 0xe9, 0x1d, 0x41, 0x16, 0x6a, 0xfe, 0x53, 0x07, 0xd4, 0xa6, 0xc4,
	0x66, 0x44, 0x04, 0x28, 0x26, 0x5f, 0x1d, 0x92, 0x90, 0xa1, 0xbb, 0x51, 0x8c, 0x8e, 0x08, 0xb3,
	0x15, 0xbe, 0x37, 0x52, 0xf8, 0xc6, 0xf1, 0xac, 0x62, 0x57, 0x84, 0xf6, 0x0e, 0x2c, 0x52, 0xe5,
	0x03, 0x16, 0x8b, 0x9d, 0x40, 0x38, 0x58, 0x79, 0xfd, 0x76, 0x3a, 0xe6, 0xce, 0xf8, 0x0a, 0x46,
	0x34, 0xd7, 0x7f, 0xa4, 0x22, 0x32, 0x09, 0x87, 0xe2, 0xc0, 0x59, 0x5b, 0x27, 0x73, 0x2b, 0xae,
	0xb0, 0x64, 0xa6, 0x7d, 0x00, 0x30, 0x8e, 0x92, 0x76, 0xd8, 0x28, 0x88, 0x64, 0x92, 0x29, 0x11,
	0xa9, 0x9c, 0x8e, 0x13, 0xec, 0xa8, 0x05, 0x65, 0x65, 0x8c, 0x70, 0xac, 0xd2, 0x5c, 0x79, 0x7d,
	0x25, 0xb5, 0x3a, 0xc7, 0x91, 0x30, 0x84, 0x31, 0xd1, 0xbc, 0x0e, 0x8b, 0x29, 0x78, 0xc3, 0x71,
	0xe0, 0x87, 0xc4, 0xfc, 0x8d, 0x0e, 0x68, 0x77, 0xec, 0x66, 0x61, 0x9f, 0x92, 0x1a, 0xcf, 0x85,
	0x57, 0x7b, 0x59, 0xf0, 0x66, 0x10, 0x2a, 0x7c, 0x03, 0x84, 0x7e, 0xa9, 0xc3, 0x62, 0x0a, 0x0a,
	0x09, 0x11, 0xfa, 0x12, 0x6e, 0xe6, 0x1c, 0xd6, 0x72, 0x65, 0x34, 0x29, 0x9f, 0x7c, 0x6b, 0xca,
	0xa1, 0x55, 0xec, 0xe1, 0x25, 0x7a, 0x51, 0x4e, 0x4d, 0x43, 0xa0, 0xe7, 0x64, 0x93, 0x0b, 0x21,
	0xa8, 0x29, 0x08, 0x22, 0xd5, 0x24, 0x86, 0xcb, 0x39, 0x28, 0x44, 0xea, 0x54, 0xc3, 0xe4, 0xd0,
	0xbc, 0x0b, 0xd7, 0x36, 0x49, 0xe8, 0x50, 0x6f, 0xef, 0x2a, 0xee, 0x60, 0xfe, 0xce, 0x80, 0xeb,
	0x99, 0x75, 0x0a, 0xbb, 0x6f, 0x18, 0xbe, 0x53, 0x20, 0xd7, 0x5f, 0x18, 0xe4, 0xc6, 0xd5, 0x20,
	0x7f, 0x00, 0x95, 0xe8, 0xce, 0x69, 0xb3, 0x43, 0x1e, 0xd6, 0xbc, 0xa6, 0x37, 0xce, 0x2e, 0xef,
	0x8b, 0x79, 0x5c, 0x66, 0x93, 0x41, 0x8e, 0xbd, 0x8a, 0x57, 0xb4, 0x17, 0xbf, 0x9c, 0x85, 0x07,
	0x36, 0x75, 0xad, 0x70, 0x3c, 0xf4, 0x58, 0xd8, 0x98, 0x59, 0x31, 0x9a, 0x15, 0x5c, 0x16, 0xb4,
	0xbe, 0x20, 0x99, 0x08, 0xea, 0x5b, 0x5e, 0xc8, 0x92, 0xe6, 0x34, 0xdf, 0x87, 0x85, 0x04, 0x4d,
	0x99, 0xea, 0x36, 0x94, 0x27, 0x36, 0xe6, 0x6e, 0x6d, 0x34, 0x4b, 0x18, 0x62, 0x23, 0x87, 0xe6,
	0x7b, 0x80, 0x36, 0xc9, 0x90, 0x5c, 0x29, 0x53, 0xf0, 0xb4, 0x93, 0x5a, 0xa4, 0xd2, 0xce, 0xbb,
	0x50, 0xdf, 0x0a, 0x6c, 0xf7, 0x2a, 0x92, 0x16, 0x61, 0x21, 0xb1, 0x44, 0xc9, 0x79, 0x0f, 0xd0,
	0xae, 0x3f, 0xbc, 0xa2, 0xa4, 0xeb, 0xb0, 0x98, 0x5a, 0xa4, 0x64, 0xf1, 0xbb, 0xa1, 0x37, 0x22,
	0xf2, 0x46, 0x7d, 0x0b, 0x20, 0x64, 0x36, 0x65, 0xb2, 0x64, 0x69, 0xa2, 0x64, 0x95, 0x04, 0x45,
	0xd4, 0xb5, 0x25, 0x98, 0x23, 0xbe, 0x3b, 0x29, 0xbb, 0x06, 0x9e, 0x25, 0xbe, 0x2b, 0xa6, 0x5e,
	0x87, 0x6a, 0xa8, 0x72, 0x4c, 0xf2, 0x9e, 0x52, 0x89, 0x88, 0xa2, 0xda, 0x75, 0xa1, 0x8a, 0x09,
	0x3b, 0xa4, 0xfc, 0xaa, 0xc6, 0x88, 0xcf, 0xd0, 0x3d, 0x28, 0x53, 0x41, 0x90, 0xb7, 0x67, 0x4d,
	0xdc, 0x9e, 0x5f, 0xcd, 0x78, 0x38, 0x9f, 0x17, 0x17, 0x67, 0xa0, 0xf1, 0x6f, 0xf3, 0xdf, 0x3a,
	0x54, 0x1f, 0x11, 0x86, 0x83, 0xe3, 0x4b, 0x26, 0xef, 0xdb, 0xd9, 0x7b, 0x2d, 0x7f, 0x1e, 0x24,
	0x2e, 0xae, 0xe8, 0x0d, 0xa8, 0xc9, 0x7b, 0x64, 0xc8, 0xdf, 0x05, 0xfb, 0x84, 0x35, 0x0c, 0xe1,
	0x0c, 0x15, 0x45, 0x1d, 0x04, 0x8f, 0x88, 0xac, 0xcc, 0xfc, 0xe9, 0x40, 0x39, 0x5e, 0x2a, 0xe1,
	0x66, 0x42, 0x3b, 0x42, 0x13, 0x97, 0x58, 0x0c, 0x6c, 0xf6, 0x3d, 0x51, 0x3c, 0xfb, 0x9e, 0xb8,
	0x03, 0x15, 0xc7, 0x76, 0x0e, 0x88, 0x25, 0x6e, 0xfe, 0xdc, 0xab, 0xb5, 0xe6, 0xdc, 0x07, 0x05,
	0x46, 0x0f, 0x09, 0x2e, 0x8b, 0x99, 0x0d, 0x31, 0x81, 0x6e, 0xc0, 0x8c, 0x7c, 0x72, 0x34, 0x66,
	0xc5, 0xf5, 0x57, 0x8d, 0x44, 0x58, 0x08, 0xe3, 0x49, 0x85, 0x1b, 0x73, 0xe2, 0xfa, 0x52, 0x16,
	0xb4, 0xb6, 0x20, 0x71, 0x8c, 0xb8, 0x01, 0x15, 0x43, 0x49, 0x30, 0x94, 0x88, 0xef, 0xaa, 0xe9,
	0x6b, 0x50, 0x64, 0xc1, 0x53, 0xe2, 0x37, 0x40, 0x08, 0x96, 0x03, 0xf3, 0x17, 0x50, 0x8b, 0x90,
	0x56, 0x41, 0x73, 0x1f, 0xe6, 0x1c, 0x75, 0x2b, 0x54, 0xd9, 0x2d, 0xfd, 0x40, 0xc8, 0x5e, 0x19,
	0x71, 0xcc, 0xce, 0x5f, 0x67, 0x34, 0x38, 0x8e, 0x5e, 0x67, 0x34, 0x38, 0xe6, 0x3a, 0xf9, 0xe4,
	0x84, 0x59, 0x72, 0x67, 0x43, 0xec, 0x5c, 0xe2, 0x94, 0x81, 0xd8, 0xfd, 0x6f, 0x1a, 0xd4, 0x65,
	0x7d, 0xba, 0xbc, 0xad, 0x6f, 0x01, 0xf0, 0x57, 0x87, 0x73, 0x20, 0x8c, 0x24, 0xf7, 0x2a, 0xd1,
	0xe0, 0xb8, 0x2d, 0x08, 0xe8, 0x7d, 0x28, 0x4d, 0x9e, 0x10, 0x46, 0x4e, 0x76, 0x8e, 0x5f, 0x12,
	0x78, 0xc2, 0xc8, 0x13, 0x97, 0xf2, 0x55, 0x47, 0x7a, 0xaf, 0xb2, 0xfe, 0x72, 0x8e, 0xbb, 0x2a,
	0xff, 0xc6, 0x55, 0x9a, 0x1c, 0x9a, 0x5f, 0xc0, 0x42, 0xe2, 0x28, 0xdf, 0x22, 0x98, 0x9a, 0x02,
	0xd3, 0xfc, 0x8b, 0x06, 0xd5, 0x9d, 0xc3, 0x2b, 0x84, 0xc5, 0x59, 0x7b, 0xbc, 0x34, 0x74, 0x7e,
	0x06, 0xb5, 0x48, 0xf5, 0x17, 0x01, 0xcd, 0xdf, 0x35, 0xa8, 0xcb, 0xa4, 0xfc, 0x2d, 0x26, 0x8d,
	0x97, 0xe9, 0x4a, 0x89, 0xc3, 0xbc, 0x08, 0xbc, 0xfe, 0xa3, 0xc3, 0x92, 0x28, 0x15, 0x5d, 0x7f,
	0xc3, 0x66, 0xce, 0xc1, 0xf3, 0x65, 0x5b, 0x23, 0x03, 0x5c, 0x9c, 0x6a, 0x0c, 0x31, 0x25, 0x07,
	0x39, 0x39, 0xb8, 0x30, 0x35, 0x07, 0x17, 0xbf, 0x69, 0x0e, 0x9e, 0x99, 0x9e, 0x83, 0x67, 0xa7,
	0xe7, 0xe0, 0xb9, 0x0b, 0x73, 0x70, 0x69, 0x5a, 0x0e, 0x86, 0x4c, 0x0e, 0xe6, 0xef, 0xf8, 0x1c,
	0xb8, 0x1f, 0xc2, 0x8c, 0x00, 0x57, 0xde, 0x50, 0xb2, 0xb7, 0xc0, 0x73, 0xcd, 0x84, 0xd5, 0x2a,
	0xf3, 0xaf, 0x1a, 0x34, 0x70, 0x70, 0x9c, 0xe1, 0x51, 0x6e, 0xb3, 0x08, 0x45, 0x2f, 0xb4, 0x82,
	0xa7, 0xea, 0x45, 0x5c, 0xf0, 0xc2, 0xed, 0xa7, 0xa8, 0x09, 0x45, 0x42, 0x69, 0x40, 0xd5, 0xf3,
	0x06, 0xa5, 0x36, 0x14, 0x0d, 0x45, 0x2c, 0x19, 0x52, 0x5e, 0x27, 0xef, 0xde, 0x57, 0xf5, 0xba,
	0x42, 0xec, 0x75, 0x99, 0x6a, 0x50, 0xcc, 0x56, 0x83, 0x23, 0x58, 0xce, 0x3b, 0xac, 0x3a, 0xc8,
	0x14, 0xa7, 0xbc, 0x0f, 0x05, 0x1a, 0x1c, 0x87, 0xaa, 0xa7, 0xf5, 0x66, 0xb6, 0x07, 0x95, 0x2b,
	0x13, 0x8b, 0x25, 0xe6, 0xa7, 0xb0, 0x98, 0xb7, 0xe1, 0x8f, 0x33, 0x66, 0xb9, 0x33, 0xd5, 0x2c,
	0x4a, 0x6a, 0x64, 0x97, 0x7f, 0x69, 0xb0, 0x34, 0xd9, 0xfa, 0x33, 0xea, 0xa5, 0xb2, 0xd3, 0x9a,
	0x6a, 0xad, 0xca, 0xa6, 0x59, 0x3a, 0x3b, 0x6c, 0x8f, 0x89, 0xea, 0x38, 0x4c, 0x3a, 0xab, 0xdf,
	0xd5, 0xba, 0x77, 0x02, 0x37, 0x93, 0x58, 0x64, 0x8f, 0x39, 0xc5, 0x6c, 0x1f, 0xa4, 0xcc, 0xf6,
	0xd6, 0x39, 0x66, 0xcb, 0x08, 0x55, 0x76, 0x7b, 0x02, 0xd7, 0x72, 0xb7, 0xfc, 0x30, 0x63, 0xb8,
	0xe6, 0xb9, 0x86, 0xcb, 0xca, 0x8d, 0x2c, 0xf7, 0x07, 0x0d, 0x96, 0xf3, 0x76, 0xff, 0xee, 0xc5,
	0x94, 0xf9, 0x0c, 0x5e, 0xcb, 0x3f, 0xd1, 0xe5, 0xc2, 0xe6, 0x41, 0x0a, 0xff, 0x3b, 0x53, 0xf1,
	0x4f, 0x05, 0xce, 0x4f, 0xe1, 0x7a, 0xfe, 0xa6, 0xad, 0x8c, 0x05, 0xde, 0xbe, 0x84, 0x05, 0x32,
	0xc1, 0xf3, 0xdb, 0x02, 0xcc, 0xf3, 0xb8, 0x12, 0x89, 0xfe, 0x72, 0xbe, 0xf4, 0x3e, 0x94, 0x5c,
	0x8f, 0x12, 0x47, 0x75, 0x8f, 0x79, 0x58, 0xa5, 0x43, 0x60, 0x33, 0x9a, 0xc5, 0x13, 0xc6, 0x97,
	0xfe, 0x34, 0xb8, 0x06, 0xc5, 0xa1, 0x37, 0xf2, 0x98, 0x2a, 0x59, 0x72, 0x80, 0x7e, 0x04, 0x37,
	0x3d, 0xdf, 0x19, 0x1e, 0x86, 0xde, 0x91, 0x78, 0x8a, 0x53, 0x66, 0x25, 0x6b, 0xee, 0xac, 0x08,
	0xff, 0x46, 0xcc, 0xd2, 0xe7, 0x1c, 0x93, 0xd6, 0x3d, 0xba, 0x0f, 0x4b, 0xe4, 0x24, 0x5a, 0xce,
	0x2b, 0x52, 0x72, 0xf1, 0x9c, 0x58, 0x7c, 0x23, 0x66, 0xe8, 0xf8, 0x6e, 0x62, 0x69, 0xb6, 0x4c,
	0x96, 0xa6, 0x97, 0x49, 0xb8, 0xb0, 0x4c, 0x96, 0xa7, 0x95, 0xc9, 0xca, 0xb9, 0x4f, 0x95, 0x6a,
	0xf2, 0xa9, 0xf2, 0x47, 0x0d, 0xea, 0x13, 0x8f, 0x78, 0xfe, 0x5b, 0x11, 0x8a, 0x5d, 0x9f, 0xc3,
	0x21, 0x7e, 0xa3, 0xf7, 0xe0, 0x86, 0xa8, 0x50, 0x67, 0x11, 0x97, 0x6f, 0x97, 0x45, 0x3e, 0x9b,
	0x05, 0x3b, 0x5d, 0xd6, 0x0a, 0xd9, 0xb2, 0xb6, 0x2e, 0x5b, 0x13, 0xb2, 0xeb, 0x71, 0x9e, 0x2b,
	0x6b, 0xe9, 0xf7, 0xbc, 0x07, 0x33, 0x79, 0x4d, 0x6b, 0xe9, 0xf2, 0x93, 0xa6, 0x75, 0x5a, 0x8a,
	0x9e, 0x0d, 0x88, 0xd7, 0xa1, 0xea, 0x50, 0x92, 0xea, 0x68, 0xeb, 0xfc, 0xdd, 0x1e, 0x11, 0xc5,
	0xbb, 0xbd, 0x0d, 0x28, 0xa9, 0x9e, 0xc2, 0xf5, 0x7b, 0x30, 0x2b, 0x77, 0x89, 0x42, 0x78, 0x31,
	0xa7, 0x85, 0x83, 0x23, 0x1e, 0xf3, 0x2b, 0x28, 0xab, 0x5e, 0xe4, 0x81, 0x4d, 0x5d, 0xb4, 0x04,
	0x73, 0xb2, 0x89, 0x13, 0xeb, 0x3c, 0x2b, 0xc6, 0x5d, 0x97, 0x9f, 0x67, 0x6c, 0x53, 0xe2, 0xb3,
	0x44, 0x13, 0x5e, 0x12, 0xba, 0x2e, 0x5a, 0x85, 0x05, 0x35, 0x19, 0x7a, 0x7b, 0x43, 0xcf, 0xdf,
	0xe7, 0x4c, 0x86, 0x60, 0x9a, 0x97, 0x13, 0x7d, 0x49, 0xef, 0xba, 0xe6, 0xd7, 0xda, 0xa4, 0x43,
	0x97, 0xc6, 0xf6, 0x42, 0xc8, 0x7e, 0x08, 0x8d, 0x6c, 0x60, 0xc5, 0xaa, 0x4a, 0x75, 0xae, 0xa7,
	0xa3, 0xaa, 0xaf, 0x14, 0xbf, 0x0d, 0xb2, 0x09, 0x65, 0xc9, 0x68, 0x95, 0x1f, 0x07, 0x40, 0x90,
	0xb6, 0x38, 0xc5, 0xfc, 0xb3, 0x0e, 0x37, 0xb2, 0x0a, 0x29, 0x34, 0x2f, 0xd4, 0x28, 0xf7, 0xb3,
	0x87, 0x9e, 0xf3, 0xe5, 0x21, 0x6d, 0x6d, 0x63, 0xaa, 0xb5, 0x0b, 0x67, 0xad, 0x8d, 0x1e, 0x42,
	0x35, 0x6a, 0x2a, 0xcb, 0xfe, 0x5e, 0x51, 0xe4, 0xc9, 0xa5, 0xbc, 0xb6, 0xb2, 0x6c, 0xf0, 0x55,
	0xc2, 0xc4, 0x08, 0xbd, 0x03, 0x33, 0xe2, 0xc8, 0xb2, 0x31, 0x57, 0xce, 0x34, 0x06, 0x13, 0x3e,
	0x80, 0x15, 0x1f, 0x32, 0xa1, 0x2a, 0x43, 0x2a, 0x42, 0x79, 0x56, 0xe6, 0x03, 0x11, 0x49, 0x12,
	0x5b, 0xf3, 0x13, 0x78, 0xf5, 0x11, 0x51, 0x23, 0xc6, 0xaf, 0x3e, 0x01, 0xbd, 0x94, 0x31, 0x93,
	0x7e, 0xa6, 0xa7, 0xfc, 0xcc, 0x6c, 0x41, 0xe3, 0xac, 0x48, 0x65, 0x8e, 0x37, 0xa1, 0xa6, 0x96,
	0xa9, 0x19, 0x25, 0xb8, 0x1a, 0x26, 0xd9, 0xcd, 0x5d, 0xb8, 0xc1, 0x45, 0x28, 0x53, 0x3a, 0x01,
	0x75, 0x23, 0xa5, 0x2e, 0x27, 0x60, 0x92, 0xda, 0xf5, 0x44, 0x6a, 0x37, 0x7f, 0xad, 0xcb, 0xd3,
	0xa6, 0xe4, 0x2a, 0xcd, 0x9e, 0xc4, 0x0d, 0x54, 0x2a, 0x26, 0xa2, 0xe8, 0x7b, 0x37, 0x05, 0xf3,
	0x39, 0xab, 0xd7, 0x52, 0x44, 0x65, 0x67, 0x39, 0x0a, 0xd1, 0x1a, 0x2c, 0x26, 0xcd, 0x10, 0xe9,
	0x2d, 0x5d, 0x7e, 0x61, 0x62, 0x0c, 0x35, 0xb1, 0xfc, 0x05, 0x54, 0x92, 0xe2, 0xd0, 0x3d, 0x28,
	0xdb, 0x8e, 0xf4, 0xad, 0xc9, 0xad, 0x35, 0xdd, 0xcd, 0x6b, 0x39, 0xf1, 0x95, 0x15, 0xec, 0xf8,
	0x37, 0xaf, 0x13, 0xf2, 0x30, 0x2a, 0xd3, 0xaa, 0x91, 0x69, 0xc1, 0xed, 0x76, 0x30, 0x1a, 0x1f,
	0x32, 0x22, 0xfa, 0xba, 0x3b, 0x81, 0xe7, 0xb3, 0x70, 0xe3, 0xb4, 0xef, 0x3d, 0x23, 0x97, 0x6f,
	0x05, 0x89, 0x2e, 0xb1, 0xfc, 0xb6, 0x2e, 0x3f, 0xb5, 0x96, 0x04, 0x85, 0x0b, 0x31, 0xff, 0xa1,
	0xc3, 0xca, 0xf9, 0x3b, 0x3c, 0x7f, 0x01, 0xb9, 0x0b, 0x33, 0xa1, 0xf8, 0x46, 0x7e, 0xb9, 0x0f,
	0xe9, 0x8a, 0x59, 0xd4, 0x47, 0xa1, 0xf5, 0x58, 0xe8, 0xa3, 0x1e, 0xc9, 0xe5, 0x70, 0xa2, 0x22,
	0xfa, 0x1c, 0x4a, 0xc3, 0x40, 0x7e, 0xcf, 0x89, 0x3e, 0xac, 0x3d, 0xc8, 0x68, 0x75, 0xf1, 0xb1,
	0xd6, 0xc4, 0xcc, 0x96, 0x92, 0x81, 0x27, 0xd2, 0x96, 0xdb, 0x50, 0x4d, 0xcd, 0xa1, 0x65, 0x98,
	0x8b, 0x66, 0xa3, 0xf8, 0x8a, 0xc6, 0xd2, 0x74, 0x63, 0x62, 0xcb, 0xcf, 0x8c, 0x08, 0xab, 0xd1,
	0xea, 0x5d, 0xa8, 0xa5, 0xff, 0xfd, 0x81, 0xca, 0x30, 0xdb, 0xed, 0x0d, 0x3a, 0x8f, 0x3a, 0xb8,
	0xae, 0x21, 0x80, 0x99, 0xfe, 0x00, 0x77, 0x7b, 0x8f, 0xea, 0x3a, 0xff, 0xbd, 0xd1, 0xed, 0xb5,
	0xf0, 0xe7, 0x75, 0x63, 0xf5, 0xad, 0xe4, 0xbf, 0x4e, 0xe4, 0x07, 0x07, 0x84, 0xa0, 0xd6, 0xda,
	0x1d, 0x6c, 0x5b, 0xdd, 0x5e, 0x1b, 0x77, 0x1e, 0x77, 0x7a, 0x83, 0xba, 0xb6, 0xba, 0x06, 0xf3,
	0x99, 0xff, 0x55, 0xa0, 0x39, 0x28, 0xf4, 0xb6, 0x7b, 0x9d, 0xba, 0xc6, 0x7f, 0xb5, 0x3b, 0x5b,
	0x5b, 0x75, 0x1d, 0xcd, 0x82, 0x81, 0xb7, 0x3f, 0xab, 0x1b, 0xab, 0x9f, 0x40, 0x39, 0xf1, 0x49,
	0x82, 0x6f, 0xd9, 0x6a, 0x0f, 0xba, 0x9f, 0x72, 0xee, 0x0a, 0xcc, 0x75, 0x7b, 0x6a, 0xa4, 0x73,
	0x2d, 0xb7, 0xb6, 0x5b, 0x9b, 0x5c, 0x33, 0x03, 0x55, 0xa1, 0xb4, 0xdb, 0x8b, 0x86, 0x05, 0xce,
	0xb9, 0xbb, 0xb3, 0xd9, 0x1a, 0xf0, 0x51, 0x71, 0xf5, 0x31, 0xbc, 0x7a, 0xce, 0x3f, 0x17, 0xb8,
	0xf8, 0xee, 0xa3, 0xde, 0x36, 0xee, 0xd4, 0x5f, 0x41, 0x75, 0xa8, 0x74, 0x9e, 0xec, 0x74, 0xda,
	0x03, 0xab, 0xf3, 0xa4, 0xdb, 0x1f, 0xd4, 0x35, 0x74, 0x0d, 0xea, 0x8a, 0xd2, 0xdb, 0x8e, 0xa8,
	0xfa, 0xea, 0x1b, 0x00, 0x93, 0x5e, 0x37, 0x57, 0x03, 0xf3, 0xf9, 0x1e, 0x17, 0x51, 0x82, 0x22,
	0x1e, 0x58, 0x3b, 0x1f, 0xd7, 0xb5, 0xd5, 0x77, 0xa0, 0x9a, 0x7a, 0xf9, 0xf1, 0x13, 0xee, 0xec,
	0x0e, 0x24, 0xa2, 0x42, 0xb9, 0x8e, 0x44, 0x74, 0xb3, 0xb3, 0xd5, 0x19, 0x74, 0x04, 0xa2, 0xa5,
	0xf8, 0x52, 0xcb, 0xc5, 0x7e, 0xb4, 0x8d, 0x3f, 0x6b, 0xe1, 0xcd, 0xfa, 0x2b, 0xfc, 0x38, 0x1b,
	0xad, 0xf6, 0xc7, 0x62, 0xa4, 0xad, 0xfe, 0x20, 0x8a, 0x66, 0x05, 0xd1, 0x22, 0xcc, 0xf7, 0x07,
	0xb8, 0xd3, 0x7a, 0x6c, 0x75, 0x7a, 0xad, 0x8d, 0x2d, 0x7e, 0x66, 0x0d, 0x2d, 0x40, 0x55, 0x11,
	0x23, 0xc0, 0x56, 0xef, 0x03, 0x4c, 0xa2, 0x9a, 0x6f, 0xb0, 0xb3, 0x3b, 0xb0, 0x38, 0xe8, 0x1a,
	0xaa, 0x01, 0x48, 0x95, 0xc4, 0x58, 0xe7, 0x63, 0xa9, 0x96, 0x18, 0x1b, 0xff, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0xb7, 0x8a, 0x5c, 0xa0, 0xbb, 0x24, 0x00, 0x00,
}
