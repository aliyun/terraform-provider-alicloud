package config

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// GetResourceConfigHistory invokes the config.GetResourceConfigHistory API synchronously
// api document: https://help.aliyun.com/api/config/getresourceconfighistory.html
func (client *Client) GetResourceConfigHistory(request *GetResourceConfigHistoryRequest) (response *GetResourceConfigHistoryResponse, err error) {
	response = CreateGetResourceConfigHistoryResponse()
	err = client.DoAction(request, response)
	return
}

// GetResourceConfigHistoryWithChan invokes the config.GetResourceConfigHistory API asynchronously
// api document: https://help.aliyun.com/api/config/getresourceconfighistory.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetResourceConfigHistoryWithChan(request *GetResourceConfigHistoryRequest) (<-chan *GetResourceConfigHistoryResponse, <-chan error) {
	responseChan := make(chan *GetResourceConfigHistoryResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.GetResourceConfigHistory(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// GetResourceConfigHistoryWithCallback invokes the config.GetResourceConfigHistory API asynchronously
// api document: https://help.aliyun.com/api/config/getresourceconfighistory.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) GetResourceConfigHistoryWithCallback(request *GetResourceConfigHistoryRequest, callback func(response *GetResourceConfigHistoryResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *GetResourceConfigHistoryResponse
		var err error
		defer close(result)
		response, err = client.GetResourceConfigHistory(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// GetResourceConfigHistoryRequest is the request struct for api GetResourceConfigHistory
type GetResourceConfigHistoryRequest struct {
	*requests.RpcRequest
	ResourceId   string           `position:"Query" name:"ResourceId"`
	EndTime      requests.Integer `position:"Query" name:"EndTime"`
	StartTime    requests.Integer `position:"Query" name:"StartTime"`
	ResourceType string           `position:"Query" name:"ResourceType"`
	PageNumber   requests.Integer `position:"Query" name:"PageNumber"`
	PageSize     requests.Integer `position:"Query" name:"PageSize"`
	Region       string           `position:"Query" name:"Region"`
}

// GetResourceConfigHistoryResponse is the response struct for api GetResourceConfigHistory
type GetResourceConfigHistoryResponse struct {
	*responses.BaseResponse
	RequestId                      string                         `json:"RequestId" xml:"RequestId"`
	ResourceConfigurationHistories ResourceConfigurationHistories `json:"ResourceConfigurationHistories" xml:"ResourceConfigurationHistories"`
}

// CreateGetResourceConfigHistoryRequest creates a request to invoke GetResourceConfigHistory API
func CreateGetResourceConfigHistoryRequest() (request *GetResourceConfigHistoryRequest) {
	request = &GetResourceConfigHistoryRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Config", "2019-01-08", "GetResourceConfigHistory", "", "")
	request.Method = requests.GET
	return
}

// CreateGetResourceConfigHistoryResponse creates a response to parse from GetResourceConfigHistory response
func CreateGetResourceConfigHistoryResponse() (response *GetResourceConfigHistoryResponse) {
	response = &GetResourceConfigHistoryResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
