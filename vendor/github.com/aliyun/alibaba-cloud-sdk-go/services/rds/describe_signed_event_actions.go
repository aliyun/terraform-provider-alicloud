package rds

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeSignedEventActions invokes the rds.DescribeSignedEventActions API synchronously
// api document: https://help.aliyun.com/api/rds/describesignedeventactions.html
func (client *Client) DescribeSignedEventActions(request *DescribeSignedEventActionsRequest) (response *DescribeSignedEventActionsResponse, err error) {
	response = CreateDescribeSignedEventActionsResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeSignedEventActionsWithChan invokes the rds.DescribeSignedEventActions API asynchronously
// api document: https://help.aliyun.com/api/rds/describesignedeventactions.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeSignedEventActionsWithChan(request *DescribeSignedEventActionsRequest) (<-chan *DescribeSignedEventActionsResponse, <-chan error) {
	responseChan := make(chan *DescribeSignedEventActionsResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeSignedEventActions(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeSignedEventActionsWithCallback invokes the rds.DescribeSignedEventActions API asynchronously
// api document: https://help.aliyun.com/api/rds/describesignedeventactions.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeSignedEventActionsWithCallback(request *DescribeSignedEventActionsRequest, callback func(response *DescribeSignedEventActionsResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeSignedEventActionsResponse
		var err error
		defer close(result)
		response, err = client.DescribeSignedEventActions(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeSignedEventActionsRequest is the request struct for api DescribeSignedEventActions
type DescribeSignedEventActionsRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	BeginEventId         requests.Integer `position:"Query" name:"BeginEventId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
	PageSize             requests.Integer `position:"Query" name:"PageSize"`
}

// DescribeSignedEventActionsResponse is the response struct for api DescribeSignedEventActions
type DescribeSignedEventActionsResponse struct {
	*responses.BaseResponse
	RequestId       string                                 `json:"RequestId" xml:"RequestId"`
	NextPageEventId int                                    `json:"NextPageEventId" xml:"NextPageEventId"`
	PageRecordCount int                                    `json:"PageRecordCount" xml:"PageRecordCount"`
	FromBegin       bool                                   `json:"FromBegin" xml:"FromBegin"`
	ToEnd           bool                                   `json:"ToEnd" xml:"ToEnd"`
	EventItems      EventItemsInDescribeSignedEventActions `json:"EventItems" xml:"EventItems"`
}

// CreateDescribeSignedEventActionsRequest creates a request to invoke DescribeSignedEventActions API
func CreateDescribeSignedEventActionsRequest() (request *DescribeSignedEventActionsRequest) {
	request = &DescribeSignedEventActionsRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Rds", "2014-08-15", "DescribeSignedEventActions", "rds", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeSignedEventActionsResponse creates a response to parse from DescribeSignedEventActions response
func CreateDescribeSignedEventActionsResponse() (response *DescribeSignedEventActionsResponse) {
	response = &DescribeSignedEventActionsResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
