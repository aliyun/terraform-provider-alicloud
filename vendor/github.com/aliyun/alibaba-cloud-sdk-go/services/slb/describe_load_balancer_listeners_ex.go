package slb

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeLoadBalancerListenersEx invokes the slb.DescribeLoadBalancerListenersEx API synchronously
// api document: https://help.aliyun.com/api/slb/describeloadbalancerlistenersex.html
func (client *Client) DescribeLoadBalancerListenersEx(request *DescribeLoadBalancerListenersExRequest) (response *DescribeLoadBalancerListenersExResponse, err error) {
	response = CreateDescribeLoadBalancerListenersExResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeLoadBalancerListenersExWithChan invokes the slb.DescribeLoadBalancerListenersEx API asynchronously
// api document: https://help.aliyun.com/api/slb/describeloadbalancerlistenersex.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLoadBalancerListenersExWithChan(request *DescribeLoadBalancerListenersExRequest) (<-chan *DescribeLoadBalancerListenersExResponse, <-chan error) {
	responseChan := make(chan *DescribeLoadBalancerListenersExResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeLoadBalancerListenersEx(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeLoadBalancerListenersExWithCallback invokes the slb.DescribeLoadBalancerListenersEx API asynchronously
// api document: https://help.aliyun.com/api/slb/describeloadbalancerlistenersex.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeLoadBalancerListenersExWithCallback(request *DescribeLoadBalancerListenersExRequest, callback func(response *DescribeLoadBalancerListenersExResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeLoadBalancerListenersExResponse
		var err error
		defer close(result)
		response, err = client.DescribeLoadBalancerListenersEx(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeLoadBalancerListenersExRequest is the request struct for api DescribeLoadBalancerListenersEx
type DescribeLoadBalancerListenersExRequest struct {
	*requests.RpcRequest
	ListenerPort   requests.Integer `position:"Query" name:"ListenerPort"`
	Protocol       string           `position:"Query" name:"Protocol"`
	LoadBalancerId string           `position:"Query" name:"LoadBalancerId"`
}

// DescribeLoadBalancerListenersExResponse is the response struct for api DescribeLoadBalancerListenersEx
type DescribeLoadBalancerListenersExResponse struct {
	*responses.BaseResponse
	LoadBalancerId             string                             `json:"LoadBalancerId" xml:"LoadBalancerId"`
	RequestId                  string                             `json:"RequestId" xml:"RequestId"`
	ListenerExtendedAttributes []ListenerAttributeExResponseModel `json:"ListenerExtendedAttributes" xml:"ListenerExtendedAttributes"`
}

// CreateDescribeLoadBalancerListenersExRequest creates a request to invoke DescribeLoadBalancerListenersEx API
func CreateDescribeLoadBalancerListenersExRequest() (request *DescribeLoadBalancerListenersExRequest) {
	request = &DescribeLoadBalancerListenersExRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Slb", "2014-05-15", "DescribeLoadBalancerListenersEx", "slb", "openAPI")
	request.Method = requests.POST
	return
}

// CreateDescribeLoadBalancerListenersExResponse creates a response to parse from DescribeLoadBalancerListenersEx response
func CreateDescribeLoadBalancerListenersExResponse() (response *DescribeLoadBalancerListenersExResponse) {
	response = &DescribeLoadBalancerListenersExResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
