package cs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ResumeComponentUpgrade invokes the cs.ResumeComponentUpgrade API synchronously
// api document: https://help.aliyun.com/api/cs/resumecomponentupgrade.html
func (client *Client) ResumeComponentUpgrade(request *ResumeComponentUpgradeRequest) (response *ResumeComponentUpgradeResponse, err error) {
	response = CreateResumeComponentUpgradeResponse()
	err = client.DoAction(request, response)
	return
}

// ResumeComponentUpgradeWithChan invokes the cs.ResumeComponentUpgrade API asynchronously
// api document: https://help.aliyun.com/api/cs/resumecomponentupgrade.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ResumeComponentUpgradeWithChan(request *ResumeComponentUpgradeRequest) (<-chan *ResumeComponentUpgradeResponse, <-chan error) {
	responseChan := make(chan *ResumeComponentUpgradeResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ResumeComponentUpgrade(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ResumeComponentUpgradeWithCallback invokes the cs.ResumeComponentUpgrade API asynchronously
// api document: https://help.aliyun.com/api/cs/resumecomponentupgrade.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ResumeComponentUpgradeWithCallback(request *ResumeComponentUpgradeRequest, callback func(response *ResumeComponentUpgradeResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ResumeComponentUpgradeResponse
		var err error
		defer close(result)
		response, err = client.ResumeComponentUpgrade(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ResumeComponentUpgradeRequest is the request struct for api ResumeComponentUpgrade
type ResumeComponentUpgradeRequest struct {
	*requests.RoaRequest
	Componentid string `position:"Path" name:"componentid"`
	Clusterid   string `position:"Path" name:"clusterid"`
}

// ResumeComponentUpgradeResponse is the response struct for api ResumeComponentUpgrade
type ResumeComponentUpgradeResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateResumeComponentUpgradeRequest creates a request to invoke ResumeComponentUpgrade API
func CreateResumeComponentUpgradeRequest() (request *ResumeComponentUpgradeRequest) {
	request = &ResumeComponentUpgradeRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("CS", "2015-12-15", "ResumeComponentUpgrade", "/clusters/[clusterid]/components/[componentid]/resume", "", "")
	request.Method = requests.POST
	return
}

// CreateResumeComponentUpgradeResponse creates a response to parse from ResumeComponentUpgrade response
func CreateResumeComponentUpgradeResponse() (response *ResumeComponentUpgradeResponse) {
	response = &ResumeComponentUpgradeResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
