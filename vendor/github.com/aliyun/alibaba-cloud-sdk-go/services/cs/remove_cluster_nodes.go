package cs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// RemoveClusterNodes invokes the cs.RemoveClusterNodes API synchronously
// api document: https://help.aliyun.com/api/cs/removeclusternodes.html
func (client *Client) RemoveClusterNodes(request *RemoveClusterNodesRequest) (response *RemoveClusterNodesResponse, err error) {
	response = CreateRemoveClusterNodesResponse()
	err = client.DoAction(request, response)
	return
}

// RemoveClusterNodesWithChan invokes the cs.RemoveClusterNodes API asynchronously
// api document: https://help.aliyun.com/api/cs/removeclusternodes.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) RemoveClusterNodesWithChan(request *RemoveClusterNodesRequest) (<-chan *RemoveClusterNodesResponse, <-chan error) {
	responseChan := make(chan *RemoveClusterNodesResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.RemoveClusterNodes(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// RemoveClusterNodesWithCallback invokes the cs.RemoveClusterNodes API asynchronously
// api document: https://help.aliyun.com/api/cs/removeclusternodes.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) RemoveClusterNodesWithCallback(request *RemoveClusterNodesRequest, callback func(response *RemoveClusterNodesResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *RemoveClusterNodesResponse
		var err error
		defer close(result)
		response, err = client.RemoveClusterNodes(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// RemoveClusterNodesRequest is the request struct for api RemoveClusterNodes
type RemoveClusterNodesRequest struct {
	*requests.RoaRequest
	ReleaseNode requests.Boolean `position:"Body" name:"release_node"`
	DrainNode   requests.Boolean `position:"Body" name:"drain_node"`
	ClusterId   string           `position:"Path" name:"ClusterId"`
}

// RemoveClusterNodesResponse is the response struct for api RemoveClusterNodes
type RemoveClusterNodesResponse struct {
	*responses.BaseResponse
}

// CreateRemoveClusterNodesRequest creates a request to invoke RemoveClusterNodes API
func CreateRemoveClusterNodesRequest() (request *RemoveClusterNodesRequest) {
	request = &RemoveClusterNodesRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("CS", "2015-12-15", "RemoveClusterNodes", "/api/v2/clusters/[ClusterId]/nodes/remove", "", "")
	request.Method = requests.POST
	return
}

// CreateRemoveClusterNodesResponse creates a response to parse from RemoveClusterNodes response
func CreateRemoveClusterNodesResponse() (response *RemoveClusterNodesResponse) {
	response = &RemoveClusterNodesResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
