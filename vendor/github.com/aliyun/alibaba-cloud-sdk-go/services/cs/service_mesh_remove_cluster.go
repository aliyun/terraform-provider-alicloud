package cs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ServiceMeshRemoveCluster invokes the cs.ServiceMeshRemoveCluster API synchronously
// api document: https://help.aliyun.com/api/cs/servicemeshremovecluster.html
func (client *Client) ServiceMeshRemoveCluster(request *ServiceMeshRemoveClusterRequest) (response *ServiceMeshRemoveClusterResponse, err error) {
	response = CreateServiceMeshRemoveClusterResponse()
	err = client.DoAction(request, response)
	return
}

// ServiceMeshRemoveClusterWithChan invokes the cs.ServiceMeshRemoveCluster API asynchronously
// api document: https://help.aliyun.com/api/cs/servicemeshremovecluster.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ServiceMeshRemoveClusterWithChan(request *ServiceMeshRemoveClusterRequest) (<-chan *ServiceMeshRemoveClusterResponse, <-chan error) {
	responseChan := make(chan *ServiceMeshRemoveClusterResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ServiceMeshRemoveCluster(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ServiceMeshRemoveClusterWithCallback invokes the cs.ServiceMeshRemoveCluster API asynchronously
// api document: https://help.aliyun.com/api/cs/servicemeshremovecluster.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ServiceMeshRemoveClusterWithCallback(request *ServiceMeshRemoveClusterRequest, callback func(response *ServiceMeshRemoveClusterResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ServiceMeshRemoveClusterResponse
		var err error
		defer close(result)
		response, err = client.ServiceMeshRemoveCluster(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ServiceMeshRemoveClusterRequest is the request struct for api ServiceMeshRemoveCluster
type ServiceMeshRemoveClusterRequest struct {
	*requests.RoaRequest
	ServiceMeshId string `position:"Path" name:"ServiceMeshId"`
}

// ServiceMeshRemoveClusterResponse is the response struct for api ServiceMeshRemoveCluster
type ServiceMeshRemoveClusterResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateServiceMeshRemoveClusterRequest creates a request to invoke ServiceMeshRemoveCluster API
func CreateServiceMeshRemoveClusterRequest() (request *ServiceMeshRemoveClusterRequest) {
	request = &ServiceMeshRemoveClusterRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("CS", "2015-12-15", "ServiceMeshRemoveCluster", "/servicemesh/[ServiceMeshId]/remove/clusters", "csk", "openAPI")
	request.Method = requests.PUT
	return
}

// CreateServiceMeshRemoveClusterResponse creates a response to parse from ServiceMeshRemoveCluster response
func CreateServiceMeshRemoveClusterResponse() (response *ServiceMeshRemoveClusterResponse) {
	response = &ServiceMeshRemoveClusterResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
