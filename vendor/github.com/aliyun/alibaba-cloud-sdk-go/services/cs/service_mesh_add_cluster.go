package cs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// ServiceMeshAddCluster invokes the cs.ServiceMeshAddCluster API synchronously
// api document: https://help.aliyun.com/api/cs/servicemeshaddcluster.html
func (client *Client) ServiceMeshAddCluster(request *ServiceMeshAddClusterRequest) (response *ServiceMeshAddClusterResponse, err error) {
	response = CreateServiceMeshAddClusterResponse()
	err = client.DoAction(request, response)
	return
}

// ServiceMeshAddClusterWithChan invokes the cs.ServiceMeshAddCluster API asynchronously
// api document: https://help.aliyun.com/api/cs/servicemeshaddcluster.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ServiceMeshAddClusterWithChan(request *ServiceMeshAddClusterRequest) (<-chan *ServiceMeshAddClusterResponse, <-chan error) {
	responseChan := make(chan *ServiceMeshAddClusterResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.ServiceMeshAddCluster(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// ServiceMeshAddClusterWithCallback invokes the cs.ServiceMeshAddCluster API asynchronously
// api document: https://help.aliyun.com/api/cs/servicemeshaddcluster.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) ServiceMeshAddClusterWithCallback(request *ServiceMeshAddClusterRequest, callback func(response *ServiceMeshAddClusterResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *ServiceMeshAddClusterResponse
		var err error
		defer close(result)
		response, err = client.ServiceMeshAddCluster(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// ServiceMeshAddClusterRequest is the request struct for api ServiceMeshAddCluster
type ServiceMeshAddClusterRequest struct {
	*requests.RoaRequest
	ServiceMeshId string `position:"Path" name:"ServiceMeshId"`
}

// ServiceMeshAddClusterResponse is the response struct for api ServiceMeshAddCluster
type ServiceMeshAddClusterResponse struct {
	*responses.BaseResponse
	RequestId string `json:"RequestId" xml:"RequestId"`
}

// CreateServiceMeshAddClusterRequest creates a request to invoke ServiceMeshAddCluster API
func CreateServiceMeshAddClusterRequest() (request *ServiceMeshAddClusterRequest) {
	request = &ServiceMeshAddClusterRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("CS", "2015-12-15", "ServiceMeshAddCluster", "/servicemesh/[ServiceMeshId]/add/clusters", "csk", "openAPI")
	request.Method = requests.PUT
	return
}

// CreateServiceMeshAddClusterResponse creates a response to parse from ServiceMeshAddCluster response
func CreateServiceMeshAddClusterResponse() (response *ServiceMeshAddClusterResponse) {
	response = &ServiceMeshAddClusterResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
