package cs

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DescribeClusterAddonUpgradeStatus invokes the cs.DescribeClusterAddonUpgradeStatus API synchronously
// api document: https://help.aliyun.com/api/cs/describeclusteraddonupgradestatus.html
func (client *Client) DescribeClusterAddonUpgradeStatus(request *DescribeClusterAddonUpgradeStatusRequest) (response *DescribeClusterAddonUpgradeStatusResponse, err error) {
	response = CreateDescribeClusterAddonUpgradeStatusResponse()
	err = client.DoAction(request, response)
	return
}

// DescribeClusterAddonUpgradeStatusWithChan invokes the cs.DescribeClusterAddonUpgradeStatus API asynchronously
// api document: https://help.aliyun.com/api/cs/describeclusteraddonupgradestatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeClusterAddonUpgradeStatusWithChan(request *DescribeClusterAddonUpgradeStatusRequest) (<-chan *DescribeClusterAddonUpgradeStatusResponse, <-chan error) {
	responseChan := make(chan *DescribeClusterAddonUpgradeStatusResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DescribeClusterAddonUpgradeStatus(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DescribeClusterAddonUpgradeStatusWithCallback invokes the cs.DescribeClusterAddonUpgradeStatus API asynchronously
// api document: https://help.aliyun.com/api/cs/describeclusteraddonupgradestatus.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DescribeClusterAddonUpgradeStatusWithCallback(request *DescribeClusterAddonUpgradeStatusRequest, callback func(response *DescribeClusterAddonUpgradeStatusResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DescribeClusterAddonUpgradeStatusResponse
		var err error
		defer close(result)
		response, err = client.DescribeClusterAddonUpgradeStatus(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DescribeClusterAddonUpgradeStatusRequest is the request struct for api DescribeClusterAddonUpgradeStatus
type DescribeClusterAddonUpgradeStatusRequest struct {
	*requests.RoaRequest
	ComponentId string `position:"Path" name:"ComponentId"`
	ClusterId   string `position:"Path" name:"ClusterId"`
}

// DescribeClusterAddonUpgradeStatusResponse is the response struct for api DescribeClusterAddonUpgradeStatus
type DescribeClusterAddonUpgradeStatusResponse struct {
	*responses.BaseResponse
	Template   string     `json:"template" xml:"template"`
	CanUpgrade bool       `json:"can_upgrade" xml:"can_upgrade"`
	AddonInfo  Addon_info `json:"addon_info" xml:"addon_info"`
}

// CreateDescribeClusterAddonUpgradeStatusRequest creates a request to invoke DescribeClusterAddonUpgradeStatus API
func CreateDescribeClusterAddonUpgradeStatusRequest() (request *DescribeClusterAddonUpgradeStatusRequest) {
	request = &DescribeClusterAddonUpgradeStatusRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("CS", "2015-12-15", "DescribeClusterAddonUpgradeStatus", "/clusters/[ClusterId]/components/[ComponentId]/upgradestatus", "", "")
	request.Method = requests.GET
	return
}

// CreateDescribeClusterAddonUpgradeStatusResponse creates a response to parse from DescribeClusterAddonUpgradeStatus response
func CreateDescribeClusterAddonUpgradeStatusResponse() (response *DescribeClusterAddonUpgradeStatusResponse) {
	response = &DescribeClusterAddonUpgradeStatusResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
